Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> printInst PTCOMA
Rule 5     instruccion -> asignacion PTCOMA
Rule 6     instruccion -> accesoAsignacion PTCOMA
Rule 7     instruccion -> structs PTCOMA
Rule 8     instruccion -> ifInst PTCOMA
Rule 9     instruccion -> whileInst PTCOMA
Rule 10    instruccion -> forInst PTCOMA
Rule 11    instruccion -> continueInst PTCOMA
Rule 12    instruccion -> breakInst PTCOMA
Rule 13    instruccion -> funcionDecl PTCOMA
Rule 14    instruccion -> llamadaExp PTCOMA
Rule 15    instruccion -> returnInst PTCOMA
Rule 16    llamadaExp -> ID PARIZQ paramExp PARDER
Rule 17    llamadaExp -> ID PARIZQ PARDER
Rule 18    llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER
Rule 19    llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER
Rule 20    llamadaExp -> STRINGFUNC PARIZQ expresion PARDER
Rule 21    paramExp -> paramExp COMA expresion
Rule 22    paramExp -> expresion
Rule 23    funcionDecl -> FUNCTION ID PARIZQ paramsDecl PARDER bloque END
Rule 24    funcionDecl -> FUNCTION ID PARIZQ PARDER bloque END
Rule 25    paramsDecl -> paramsDecl COMA paramDl
Rule 26    paramsDecl -> paramDl
Rule 27    paramDl -> ID DOSPUNTOS DOSPUNTOS tipo
Rule 28    paramDl -> ID
Rule 29    returnInst -> RETURN expresion
Rule 30    printInst -> PRINT PARIZQ paramExp PARDER
Rule 31    printInst -> PRINTLN PARIZQ paramExp PARDER
Rule 32    asignacion -> ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
Rule 33    asignacion -> ID IGUAL expresion
Rule 34    accesoAsignacion -> acceso IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
Rule 35    accesoAsignacion -> acceso IGUAL expresion
Rule 36    tipo -> TINT64
Rule 37    tipo -> TFLOAT64
Rule 38    tipo -> TSTRING
Rule 39    tipo -> TBOOL
Rule 40    tipo -> TCHAR
Rule 41    tipo -> TNULO
Rule 42    tipo -> ID
Rule 43    structs -> MUTABLE STRUCT ID atributos END
Rule 44    structs -> STRUCT ID atributos END
Rule 45    atributos -> atributos atributo
Rule 46    atributos -> atributo
Rule 47    atributo -> ID DOSPUNTOS DOSPUNTOS tipo PTCOMA
Rule 48    atributo -> ID PTCOMA
Rule 49    arreglo -> CORIZQ paramExp CORDER
Rule 50    arreglo -> ID listaIndices
Rule 51    listaIndices -> listaIndices indice
Rule 52    listaIndices -> indice
Rule 53    indice -> CORIZQ expresion CORDER
Rule 54    rango -> expresion DOSPUNTOS expresion
Rule 55    rango -> BEGIN DOSPUNTOS expresion
Rule 56    rango -> expresion DOSPUNTOS END
Rule 57    rango -> BEGIN DOSPUNTOS END
Rule 58    acceso -> acceso PUNTO acceso
Rule 59    acceso -> ID PUNTO ID
Rule 60    acceso -> arreglo PUNTO arreglo
Rule 61    acceso -> arreglo PUNTO ID
Rule 62    acceso -> ID PUNTO arreglo
Rule 63    acceso -> ID
Rule 64    acceso -> arreglo
Rule 65    bloque -> instrucciones
Rule 66    ifInst -> IF expresion bloque END
Rule 67    ifInst -> IF expresion bloque ELSE bloque END
Rule 68    ifInst -> IF expresion bloque elseIfInst END
Rule 69    elseIfInst -> ELSEIF expresion bloque
Rule 70    elseIfInst -> ELSEIF expresion bloque ELSE bloque
Rule 71    elseIfInst -> ELSEIF expresion bloque elseIfInst
Rule 72    whileInst -> WHILE expresion bloque END
Rule 73    forInst -> FOR ID IN expresion bloque END
Rule 74    continueInst -> CONTINUE
Rule 75    breakInst -> BREAK
Rule 76    expresion -> expresion MAS expresion
Rule 77    expresion -> expresion MENOS expresion
Rule 78    expresion -> expresion POR expresion
Rule 79    expresion -> expresion DIVIDIDO expresion
Rule 80    expresion -> expresion POTENCIA expresion
Rule 81    expresion -> expresion MODULO expresion
Rule 82    expresion -> expresion MAYOR expresion
Rule 83    expresion -> expresion MENOR expresion
Rule 84    expresion -> expresion MAYIGUAL expresion
Rule 85    expresion -> expresion MENIGUAL expresion
Rule 86    expresion -> expresion IGUALDAD expresion
Rule 87    expresion -> expresion DISTINTO expresion
Rule 88    expresion -> expresion AND expresion
Rule 89    expresion -> expresion OR expresion
Rule 90    expresion -> MENOS expresion
Rule 91    expresion -> NOT expresion
Rule 92    expresion -> PARIZQ expresion PARDER
Rule 93    expresion -> ENTERO
Rule 94    expresion -> DECIMAL
Rule 95    expresion -> STRING
Rule 96    expresion -> CHAR
Rule 97    expresion -> TRUE
Rule 98    expresion -> FALSE
Rule 99    expresion -> NOTHING
Rule 100   expresion -> rango
Rule 101   expresion -> acceso
Rule 102   expresion -> llamadaExp

Terminals, with rules where they appear

AND                  : 88
BEGIN                : 55 57
BREAK                : 75
CHAR                 : 96
COMA                 : 18 19 21 25
CONTINUE             : 74
CORDER               : 49 53
CORIZQ               : 49 53
DECIMAL              : 94
DISTINTO             : 87
DIVIDIDO             : 79
DOSPUNTOS            : 27 27 32 32 34 34 47 47 54 55 56 57
ELSE                 : 67 70
ELSEIF               : 69 70 71
END                  : 23 24 43 44 56 57 66 67 68 72 73
ENTERO               : 93
FALSE                : 98
FOR                  : 73
FUNCTION             : 23 24
ID                   : 16 17 23 24 27 28 32 33 42 43 44 47 48 50 59 59 61 62 63 73
IF                   : 66 67 68
IGUAL                : 32 33 34 35
IGUALDAD             : 86
IN                   : 73
MAS                  : 76
MAYIGUAL             : 84
MAYOR                : 82
MENIGUAL             : 85
MENOR                : 83
MENOS                : 77 90
MODULO               : 81
MUTABLE              : 43
NOT                  : 91
NOTHING              : 99
OR                   : 89
PARDER               : 16 17 18 19 20 23 24 30 31 92
PARIZQ               : 16 17 18 19 20 23 24 30 31 92
PARSE                : 18
POR                  : 78
POTENCIA             : 80
PRINT                : 30
PRINTLN              : 31
PTCOMA               : 4 5 6 7 8 9 10 11 12 13 14 15 47 48
PUNTO                : 58 59 60 61 62
RETURN               : 29
STRING               : 95
STRINGFUNC           : 20
STRUCT               : 43 44
TBOOL                : 39
TCHAR                : 40
TFLOAT64             : 37
TINT64               : 36
TNULO                : 41
TRUE                 : 97
TRUNC                : 19
TSTRING              : 38
WHILE                : 72
error                : 

Nonterminals, with rules where they appear

acceso               : 34 35 58 58 101
accesoAsignacion     : 6
arreglo              : 60 60 61 62 64
asignacion           : 5
atributo             : 45 46
atributos            : 43 44 45
bloque               : 23 24 66 67 67 68 69 70 70 71 72 73
breakInst            : 12
continueInst         : 11
elseIfInst           : 68 71
expresion            : 18 19 20 21 22 29 32 33 34 35 53 54 54 55 56 66 67 68 69 70 71 72 73 76 76 77 77 78 78 79 79 80 80 81 81 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89 90 91 92
forInst              : 10
funcionDecl          : 13
ifInst               : 8
indice               : 51 52
instruccion          : 2 3
instrucciones        : 1 2 65
listaIndices         : 50 51
llamadaExp           : 14 102
paramDl              : 25 26
paramExp             : 16 21 30 31 49
paramsDecl           : 23 25
printInst            : 4
rango                : 100
returnInst           : 15
start                : 0
structs              : 7
tipo                 : 18 19 27 32 34 47
whileInst            : 9

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . printInst PTCOMA
    (5) instruccion -> . asignacion PTCOMA
    (6) instruccion -> . accesoAsignacion PTCOMA
    (7) instruccion -> . structs PTCOMA
    (8) instruccion -> . ifInst PTCOMA
    (9) instruccion -> . whileInst PTCOMA
    (10) instruccion -> . forInst PTCOMA
    (11) instruccion -> . continueInst PTCOMA
    (12) instruccion -> . breakInst PTCOMA
    (13) instruccion -> . funcionDecl PTCOMA
    (14) instruccion -> . llamadaExp PTCOMA
    (15) instruccion -> . returnInst PTCOMA
    (30) printInst -> . PRINT PARIZQ paramExp PARDER
    (31) printInst -> . PRINTLN PARIZQ paramExp PARDER
    (32) asignacion -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (33) asignacion -> . ID IGUAL expresion
    (34) accesoAsignacion -> . acceso IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (35) accesoAsignacion -> . acceso IGUAL expresion
    (43) structs -> . MUTABLE STRUCT ID atributos END
    (44) structs -> . STRUCT ID atributos END
    (66) ifInst -> . IF expresion bloque END
    (67) ifInst -> . IF expresion bloque ELSE bloque END
    (68) ifInst -> . IF expresion bloque elseIfInst END
    (72) whileInst -> . WHILE expresion bloque END
    (73) forInst -> . FOR ID IN expresion bloque END
    (74) continueInst -> . CONTINUE
    (75) breakInst -> . BREAK
    (23) funcionDecl -> . FUNCTION ID PARIZQ paramsDecl PARDER bloque END
    (24) funcionDecl -> . FUNCTION ID PARIZQ PARDER bloque END
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (29) returnInst -> . RETURN expresion
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 18
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    CONTINUE        shift and go to state 25
    BREAK           shift and go to state 26
    FUNCTION        shift and go to state 27
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    RETURN          shift and go to state 31
    CORIZQ          shift and go to state 33

    start                          shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    printInst                      shift and go to state 4
    asignacion                     shift and go to state 5
    accesoAsignacion               shift and go to state 6
    structs                        shift and go to state 7
    ifInst                         shift and go to state 8
    whileInst                      shift and go to state 9
    forInst                        shift and go to state 10
    continueInst                   shift and go to state 11
    breakInst                      shift and go to state 12
    funcionDecl                    shift and go to state 13
    llamadaExp                     shift and go to state 14
    returnInst                     shift and go to state 15
    acceso                         shift and go to state 19
    arreglo                        shift and go to state 32

state 1

    (0) S' -> start .



state 2

    (1) start -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . printInst PTCOMA
    (5) instruccion -> . asignacion PTCOMA
    (6) instruccion -> . accesoAsignacion PTCOMA
    (7) instruccion -> . structs PTCOMA
    (8) instruccion -> . ifInst PTCOMA
    (9) instruccion -> . whileInst PTCOMA
    (10) instruccion -> . forInst PTCOMA
    (11) instruccion -> . continueInst PTCOMA
    (12) instruccion -> . breakInst PTCOMA
    (13) instruccion -> . funcionDecl PTCOMA
    (14) instruccion -> . llamadaExp PTCOMA
    (15) instruccion -> . returnInst PTCOMA
    (30) printInst -> . PRINT PARIZQ paramExp PARDER
    (31) printInst -> . PRINTLN PARIZQ paramExp PARDER
    (32) asignacion -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (33) asignacion -> . ID IGUAL expresion
    (34) accesoAsignacion -> . acceso IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (35) accesoAsignacion -> . acceso IGUAL expresion
    (43) structs -> . MUTABLE STRUCT ID atributos END
    (44) structs -> . STRUCT ID atributos END
    (66) ifInst -> . IF expresion bloque END
    (67) ifInst -> . IF expresion bloque ELSE bloque END
    (68) ifInst -> . IF expresion bloque elseIfInst END
    (72) whileInst -> . WHILE expresion bloque END
    (73) forInst -> . FOR ID IN expresion bloque END
    (74) continueInst -> . CONTINUE
    (75) breakInst -> . BREAK
    (23) funcionDecl -> . FUNCTION ID PARIZQ paramsDecl PARDER bloque END
    (24) funcionDecl -> . FUNCTION ID PARIZQ PARDER bloque END
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (29) returnInst -> . RETURN expresion
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    $end            reduce using rule 1 (start -> instrucciones .)
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 18
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    CONTINUE        shift and go to state 25
    BREAK           shift and go to state 26
    FUNCTION        shift and go to state 27
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    RETURN          shift and go to state 31
    CORIZQ          shift and go to state 33

    instruccion                    shift and go to state 34
    printInst                      shift and go to state 4
    asignacion                     shift and go to state 5
    accesoAsignacion               shift and go to state 6
    structs                        shift and go to state 7
    ifInst                         shift and go to state 8
    whileInst                      shift and go to state 9
    forInst                        shift and go to state 10
    continueInst                   shift and go to state 11
    breakInst                      shift and go to state 12
    funcionDecl                    shift and go to state 13
    llamadaExp                     shift and go to state 14
    returnInst                     shift and go to state 15
    acceso                         shift and go to state 19
    arreglo                        shift and go to state 32

state 3

    (3) instrucciones -> instruccion .

    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    PRINTLN         reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    MUTABLE         reduce using rule 3 (instrucciones -> instruccion .)
    STRUCT          reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    FOR             reduce using rule 3 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instruccion .)
    FUNCTION        reduce using rule 3 (instrucciones -> instruccion .)
    PARSE           reduce using rule 3 (instrucciones -> instruccion .)
    TRUNC           reduce using rule 3 (instrucciones -> instruccion .)
    STRINGFUNC      reduce using rule 3 (instrucciones -> instruccion .)
    RETURN          reduce using rule 3 (instrucciones -> instruccion .)
    CORIZQ          reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    END             reduce using rule 3 (instrucciones -> instruccion .)
    ELSE            reduce using rule 3 (instrucciones -> instruccion .)
    ELSEIF          reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> printInst . PTCOMA

    PTCOMA          shift and go to state 35


state 5

    (5) instruccion -> asignacion . PTCOMA

    PTCOMA          shift and go to state 36


state 6

    (6) instruccion -> accesoAsignacion . PTCOMA

    PTCOMA          shift and go to state 37


state 7

    (7) instruccion -> structs . PTCOMA

    PTCOMA          shift and go to state 38


state 8

    (8) instruccion -> ifInst . PTCOMA

    PTCOMA          shift and go to state 39


state 9

    (9) instruccion -> whileInst . PTCOMA

    PTCOMA          shift and go to state 40


state 10

    (10) instruccion -> forInst . PTCOMA

    PTCOMA          shift and go to state 41


state 11

    (11) instruccion -> continueInst . PTCOMA

    PTCOMA          shift and go to state 42


state 12

    (12) instruccion -> breakInst . PTCOMA

    PTCOMA          shift and go to state 43


state 13

    (13) instruccion -> funcionDecl . PTCOMA

    PTCOMA          shift and go to state 44


state 14

    (14) instruccion -> llamadaExp . PTCOMA

    PTCOMA          shift and go to state 45


state 15

    (15) instruccion -> returnInst . PTCOMA

    PTCOMA          shift and go to state 46


state 16

    (30) printInst -> PRINT . PARIZQ paramExp PARDER

    PARIZQ          shift and go to state 47


state 17

    (31) printInst -> PRINTLN . PARIZQ paramExp PARDER

    PARIZQ          shift and go to state 48


state 18

    (32) asignacion -> ID . IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (33) asignacion -> ID . IGUAL expresion
    (16) llamadaExp -> ID . PARIZQ paramExp PARDER
    (17) llamadaExp -> ID . PARIZQ PARDER
    (59) acceso -> ID . PUNTO ID
    (62) acceso -> ID . PUNTO arreglo
    (63) acceso -> ID .
    (50) arreglo -> ID . listaIndices
    (51) listaIndices -> . listaIndices indice
    (52) listaIndices -> . indice
    (53) indice -> . CORIZQ expresion CORDER

  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
    IGUAL           shift and go to state 49
    PARIZQ          shift and go to state 50
    PUNTO           shift and go to state 51
    CORIZQ          shift and go to state 54

  ! IGUAL           [ reduce using rule 63 (acceso -> ID .) ]
  ! PUNTO           [ reduce using rule 63 (acceso -> ID .) ]

    listaIndices                   shift and go to state 52
    indice                         shift and go to state 53

state 19

    (34) accesoAsignacion -> acceso . IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (35) accesoAsignacion -> acceso . IGUAL expresion
    (58) acceso -> acceso . PUNTO acceso

    IGUAL           shift and go to state 55
    PUNTO           shift and go to state 56


state 20

    (43) structs -> MUTABLE . STRUCT ID atributos END

    STRUCT          shift and go to state 57


state 21

    (44) structs -> STRUCT . ID atributos END

    ID              shift and go to state 58


state 22

    (66) ifInst -> IF . expresion bloque END
    (67) ifInst -> IF . expresion bloque ELSE bloque END
    (68) ifInst -> IF . expresion bloque elseIfInst END
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 59
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 23

    (72) whileInst -> WHILE . expresion bloque END
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 75
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 24

    (73) forInst -> FOR . ID IN expresion bloque END

    ID              shift and go to state 76


state 25

    (74) continueInst -> CONTINUE .

    PTCOMA          reduce using rule 74 (continueInst -> CONTINUE .)


state 26

    (75) breakInst -> BREAK .

    PTCOMA          reduce using rule 75 (breakInst -> BREAK .)


state 27

    (23) funcionDecl -> FUNCTION . ID PARIZQ paramsDecl PARDER bloque END
    (24) funcionDecl -> FUNCTION . ID PARIZQ PARDER bloque END

    ID              shift and go to state 77


state 28

    (18) llamadaExp -> PARSE . PARIZQ tipo COMA expresion PARDER

    PARIZQ          shift and go to state 78


state 29

    (19) llamadaExp -> TRUNC . PARIZQ tipo COMA expresion PARDER

    PARIZQ          shift and go to state 79


state 30

    (20) llamadaExp -> STRINGFUNC . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 80


state 31

    (29) returnInst -> RETURN . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 81
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 32

    (60) acceso -> arreglo . PUNTO arreglo
    (61) acceso -> arreglo . PUNTO ID
    (64) acceso -> arreglo .

  ! shift/reduce conflict for PUNTO resolved as shift
    PUNTO           shift and go to state 82
    IGUAL           reduce using rule 64 (acceso -> arreglo .)
    MAS             reduce using rule 64 (acceso -> arreglo .)
    MENOS           reduce using rule 64 (acceso -> arreglo .)
    POR             reduce using rule 64 (acceso -> arreglo .)
    DIVIDIDO        reduce using rule 64 (acceso -> arreglo .)
    POTENCIA        reduce using rule 64 (acceso -> arreglo .)
    MODULO          reduce using rule 64 (acceso -> arreglo .)
    MAYOR           reduce using rule 64 (acceso -> arreglo .)
    MENOR           reduce using rule 64 (acceso -> arreglo .)
    MAYIGUAL        reduce using rule 64 (acceso -> arreglo .)
    MENIGUAL        reduce using rule 64 (acceso -> arreglo .)
    IGUALDAD        reduce using rule 64 (acceso -> arreglo .)
    DISTINTO        reduce using rule 64 (acceso -> arreglo .)
    AND             reduce using rule 64 (acceso -> arreglo .)
    OR              reduce using rule 64 (acceso -> arreglo .)
    DOSPUNTOS       reduce using rule 64 (acceso -> arreglo .)
    PRINT           reduce using rule 64 (acceso -> arreglo .)
    PRINTLN         reduce using rule 64 (acceso -> arreglo .)
    ID              reduce using rule 64 (acceso -> arreglo .)
    MUTABLE         reduce using rule 64 (acceso -> arreglo .)
    STRUCT          reduce using rule 64 (acceso -> arreglo .)
    IF              reduce using rule 64 (acceso -> arreglo .)
    WHILE           reduce using rule 64 (acceso -> arreglo .)
    FOR             reduce using rule 64 (acceso -> arreglo .)
    CONTINUE        reduce using rule 64 (acceso -> arreglo .)
    BREAK           reduce using rule 64 (acceso -> arreglo .)
    FUNCTION        reduce using rule 64 (acceso -> arreglo .)
    PARSE           reduce using rule 64 (acceso -> arreglo .)
    TRUNC           reduce using rule 64 (acceso -> arreglo .)
    STRINGFUNC      reduce using rule 64 (acceso -> arreglo .)
    RETURN          reduce using rule 64 (acceso -> arreglo .)
    CORIZQ          reduce using rule 64 (acceso -> arreglo .)
    PTCOMA          reduce using rule 64 (acceso -> arreglo .)
    CORDER          reduce using rule 64 (acceso -> arreglo .)
    COMA            reduce using rule 64 (acceso -> arreglo .)
    PARDER          reduce using rule 64 (acceso -> arreglo .)

  ! PUNTO           [ reduce using rule 64 (acceso -> arreglo .) ]


state 33

    (49) arreglo -> CORIZQ . paramExp CORDER
    (21) paramExp -> . paramExp COMA expresion
    (22) paramExp -> . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    paramExp                       shift and go to state 83
    expresion                      shift and go to state 84
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 34

    (2) instrucciones -> instrucciones instruccion .

    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINTLN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MUTABLE         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    STRUCT          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FUNCTION        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PARSE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    TRUNC           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    STRINGFUNC      reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CORIZQ          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    END             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ELSE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ELSEIF          reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 35

    (4) instruccion -> printInst PTCOMA .

    PRINT           reduce using rule 4 (instruccion -> printInst PTCOMA .)
    PRINTLN         reduce using rule 4 (instruccion -> printInst PTCOMA .)
    ID              reduce using rule 4 (instruccion -> printInst PTCOMA .)
    MUTABLE         reduce using rule 4 (instruccion -> printInst PTCOMA .)
    STRUCT          reduce using rule 4 (instruccion -> printInst PTCOMA .)
    IF              reduce using rule 4 (instruccion -> printInst PTCOMA .)
    WHILE           reduce using rule 4 (instruccion -> printInst PTCOMA .)
    FOR             reduce using rule 4 (instruccion -> printInst PTCOMA .)
    CONTINUE        reduce using rule 4 (instruccion -> printInst PTCOMA .)
    BREAK           reduce using rule 4 (instruccion -> printInst PTCOMA .)
    FUNCTION        reduce using rule 4 (instruccion -> printInst PTCOMA .)
    PARSE           reduce using rule 4 (instruccion -> printInst PTCOMA .)
    TRUNC           reduce using rule 4 (instruccion -> printInst PTCOMA .)
    STRINGFUNC      reduce using rule 4 (instruccion -> printInst PTCOMA .)
    RETURN          reduce using rule 4 (instruccion -> printInst PTCOMA .)
    CORIZQ          reduce using rule 4 (instruccion -> printInst PTCOMA .)
    $end            reduce using rule 4 (instruccion -> printInst PTCOMA .)
    END             reduce using rule 4 (instruccion -> printInst PTCOMA .)
    ELSE            reduce using rule 4 (instruccion -> printInst PTCOMA .)
    ELSEIF          reduce using rule 4 (instruccion -> printInst PTCOMA .)


state 36

    (5) instruccion -> asignacion PTCOMA .

    PRINT           reduce using rule 5 (instruccion -> asignacion PTCOMA .)
    PRINTLN         reduce using rule 5 (instruccion -> asignacion PTCOMA .)
    ID              reduce using rule 5 (instruccion -> asignacion PTCOMA .)
    MUTABLE         reduce using rule 5 (instruccion -> asignacion PTCOMA .)
    STRUCT          reduce using rule 5 (instruccion -> asignacion PTCOMA .)
    IF              reduce using rule 5 (instruccion -> asignacion PTCOMA .)
    WHILE           reduce using rule 5 (instruccion -> asignacion PTCOMA .)
    FOR             reduce using rule 5 (instruccion -> asignacion PTCOMA .)
    CONTINUE        reduce using rule 5 (instruccion -> asignacion PTCOMA .)
    BREAK           reduce using rule 5 (instruccion -> asignacion PTCOMA .)
    FUNCTION        reduce using rule 5 (instruccion -> asignacion PTCOMA .)
    PARSE           reduce using rule 5 (instruccion -> asignacion PTCOMA .)
    TRUNC           reduce using rule 5 (instruccion -> asignacion PTCOMA .)
    STRINGFUNC      reduce using rule 5 (instruccion -> asignacion PTCOMA .)
    RETURN          reduce using rule 5 (instruccion -> asignacion PTCOMA .)
    CORIZQ          reduce using rule 5 (instruccion -> asignacion PTCOMA .)
    $end            reduce using rule 5 (instruccion -> asignacion PTCOMA .)
    END             reduce using rule 5 (instruccion -> asignacion PTCOMA .)
    ELSE            reduce using rule 5 (instruccion -> asignacion PTCOMA .)
    ELSEIF          reduce using rule 5 (instruccion -> asignacion PTCOMA .)


state 37

    (6) instruccion -> accesoAsignacion PTCOMA .

    PRINT           reduce using rule 6 (instruccion -> accesoAsignacion PTCOMA .)
    PRINTLN         reduce using rule 6 (instruccion -> accesoAsignacion PTCOMA .)
    ID              reduce using rule 6 (instruccion -> accesoAsignacion PTCOMA .)
    MUTABLE         reduce using rule 6 (instruccion -> accesoAsignacion PTCOMA .)
    STRUCT          reduce using rule 6 (instruccion -> accesoAsignacion PTCOMA .)
    IF              reduce using rule 6 (instruccion -> accesoAsignacion PTCOMA .)
    WHILE           reduce using rule 6 (instruccion -> accesoAsignacion PTCOMA .)
    FOR             reduce using rule 6 (instruccion -> accesoAsignacion PTCOMA .)
    CONTINUE        reduce using rule 6 (instruccion -> accesoAsignacion PTCOMA .)
    BREAK           reduce using rule 6 (instruccion -> accesoAsignacion PTCOMA .)
    FUNCTION        reduce using rule 6 (instruccion -> accesoAsignacion PTCOMA .)
    PARSE           reduce using rule 6 (instruccion -> accesoAsignacion PTCOMA .)
    TRUNC           reduce using rule 6 (instruccion -> accesoAsignacion PTCOMA .)
    STRINGFUNC      reduce using rule 6 (instruccion -> accesoAsignacion PTCOMA .)
    RETURN          reduce using rule 6 (instruccion -> accesoAsignacion PTCOMA .)
    CORIZQ          reduce using rule 6 (instruccion -> accesoAsignacion PTCOMA .)
    $end            reduce using rule 6 (instruccion -> accesoAsignacion PTCOMA .)
    END             reduce using rule 6 (instruccion -> accesoAsignacion PTCOMA .)
    ELSE            reduce using rule 6 (instruccion -> accesoAsignacion PTCOMA .)
    ELSEIF          reduce using rule 6 (instruccion -> accesoAsignacion PTCOMA .)


state 38

    (7) instruccion -> structs PTCOMA .

    PRINT           reduce using rule 7 (instruccion -> structs PTCOMA .)
    PRINTLN         reduce using rule 7 (instruccion -> structs PTCOMA .)
    ID              reduce using rule 7 (instruccion -> structs PTCOMA .)
    MUTABLE         reduce using rule 7 (instruccion -> structs PTCOMA .)
    STRUCT          reduce using rule 7 (instruccion -> structs PTCOMA .)
    IF              reduce using rule 7 (instruccion -> structs PTCOMA .)
    WHILE           reduce using rule 7 (instruccion -> structs PTCOMA .)
    FOR             reduce using rule 7 (instruccion -> structs PTCOMA .)
    CONTINUE        reduce using rule 7 (instruccion -> structs PTCOMA .)
    BREAK           reduce using rule 7 (instruccion -> structs PTCOMA .)
    FUNCTION        reduce using rule 7 (instruccion -> structs PTCOMA .)
    PARSE           reduce using rule 7 (instruccion -> structs PTCOMA .)
    TRUNC           reduce using rule 7 (instruccion -> structs PTCOMA .)
    STRINGFUNC      reduce using rule 7 (instruccion -> structs PTCOMA .)
    RETURN          reduce using rule 7 (instruccion -> structs PTCOMA .)
    CORIZQ          reduce using rule 7 (instruccion -> structs PTCOMA .)
    $end            reduce using rule 7 (instruccion -> structs PTCOMA .)
    END             reduce using rule 7 (instruccion -> structs PTCOMA .)
    ELSE            reduce using rule 7 (instruccion -> structs PTCOMA .)
    ELSEIF          reduce using rule 7 (instruccion -> structs PTCOMA .)


state 39

    (8) instruccion -> ifInst PTCOMA .

    PRINT           reduce using rule 8 (instruccion -> ifInst PTCOMA .)
    PRINTLN         reduce using rule 8 (instruccion -> ifInst PTCOMA .)
    ID              reduce using rule 8 (instruccion -> ifInst PTCOMA .)
    MUTABLE         reduce using rule 8 (instruccion -> ifInst PTCOMA .)
    STRUCT          reduce using rule 8 (instruccion -> ifInst PTCOMA .)
    IF              reduce using rule 8 (instruccion -> ifInst PTCOMA .)
    WHILE           reduce using rule 8 (instruccion -> ifInst PTCOMA .)
    FOR             reduce using rule 8 (instruccion -> ifInst PTCOMA .)
    CONTINUE        reduce using rule 8 (instruccion -> ifInst PTCOMA .)
    BREAK           reduce using rule 8 (instruccion -> ifInst PTCOMA .)
    FUNCTION        reduce using rule 8 (instruccion -> ifInst PTCOMA .)
    PARSE           reduce using rule 8 (instruccion -> ifInst PTCOMA .)
    TRUNC           reduce using rule 8 (instruccion -> ifInst PTCOMA .)
    STRINGFUNC      reduce using rule 8 (instruccion -> ifInst PTCOMA .)
    RETURN          reduce using rule 8 (instruccion -> ifInst PTCOMA .)
    CORIZQ          reduce using rule 8 (instruccion -> ifInst PTCOMA .)
    $end            reduce using rule 8 (instruccion -> ifInst PTCOMA .)
    END             reduce using rule 8 (instruccion -> ifInst PTCOMA .)
    ELSE            reduce using rule 8 (instruccion -> ifInst PTCOMA .)
    ELSEIF          reduce using rule 8 (instruccion -> ifInst PTCOMA .)


state 40

    (9) instruccion -> whileInst PTCOMA .

    PRINT           reduce using rule 9 (instruccion -> whileInst PTCOMA .)
    PRINTLN         reduce using rule 9 (instruccion -> whileInst PTCOMA .)
    ID              reduce using rule 9 (instruccion -> whileInst PTCOMA .)
    MUTABLE         reduce using rule 9 (instruccion -> whileInst PTCOMA .)
    STRUCT          reduce using rule 9 (instruccion -> whileInst PTCOMA .)
    IF              reduce using rule 9 (instruccion -> whileInst PTCOMA .)
    WHILE           reduce using rule 9 (instruccion -> whileInst PTCOMA .)
    FOR             reduce using rule 9 (instruccion -> whileInst PTCOMA .)
    CONTINUE        reduce using rule 9 (instruccion -> whileInst PTCOMA .)
    BREAK           reduce using rule 9 (instruccion -> whileInst PTCOMA .)
    FUNCTION        reduce using rule 9 (instruccion -> whileInst PTCOMA .)
    PARSE           reduce using rule 9 (instruccion -> whileInst PTCOMA .)
    TRUNC           reduce using rule 9 (instruccion -> whileInst PTCOMA .)
    STRINGFUNC      reduce using rule 9 (instruccion -> whileInst PTCOMA .)
    RETURN          reduce using rule 9 (instruccion -> whileInst PTCOMA .)
    CORIZQ          reduce using rule 9 (instruccion -> whileInst PTCOMA .)
    $end            reduce using rule 9 (instruccion -> whileInst PTCOMA .)
    END             reduce using rule 9 (instruccion -> whileInst PTCOMA .)
    ELSE            reduce using rule 9 (instruccion -> whileInst PTCOMA .)
    ELSEIF          reduce using rule 9 (instruccion -> whileInst PTCOMA .)


state 41

    (10) instruccion -> forInst PTCOMA .

    PRINT           reduce using rule 10 (instruccion -> forInst PTCOMA .)
    PRINTLN         reduce using rule 10 (instruccion -> forInst PTCOMA .)
    ID              reduce using rule 10 (instruccion -> forInst PTCOMA .)
    MUTABLE         reduce using rule 10 (instruccion -> forInst PTCOMA .)
    STRUCT          reduce using rule 10 (instruccion -> forInst PTCOMA .)
    IF              reduce using rule 10 (instruccion -> forInst PTCOMA .)
    WHILE           reduce using rule 10 (instruccion -> forInst PTCOMA .)
    FOR             reduce using rule 10 (instruccion -> forInst PTCOMA .)
    CONTINUE        reduce using rule 10 (instruccion -> forInst PTCOMA .)
    BREAK           reduce using rule 10 (instruccion -> forInst PTCOMA .)
    FUNCTION        reduce using rule 10 (instruccion -> forInst PTCOMA .)
    PARSE           reduce using rule 10 (instruccion -> forInst PTCOMA .)
    TRUNC           reduce using rule 10 (instruccion -> forInst PTCOMA .)
    STRINGFUNC      reduce using rule 10 (instruccion -> forInst PTCOMA .)
    RETURN          reduce using rule 10 (instruccion -> forInst PTCOMA .)
    CORIZQ          reduce using rule 10 (instruccion -> forInst PTCOMA .)
    $end            reduce using rule 10 (instruccion -> forInst PTCOMA .)
    END             reduce using rule 10 (instruccion -> forInst PTCOMA .)
    ELSE            reduce using rule 10 (instruccion -> forInst PTCOMA .)
    ELSEIF          reduce using rule 10 (instruccion -> forInst PTCOMA .)


state 42

    (11) instruccion -> continueInst PTCOMA .

    PRINT           reduce using rule 11 (instruccion -> continueInst PTCOMA .)
    PRINTLN         reduce using rule 11 (instruccion -> continueInst PTCOMA .)
    ID              reduce using rule 11 (instruccion -> continueInst PTCOMA .)
    MUTABLE         reduce using rule 11 (instruccion -> continueInst PTCOMA .)
    STRUCT          reduce using rule 11 (instruccion -> continueInst PTCOMA .)
    IF              reduce using rule 11 (instruccion -> continueInst PTCOMA .)
    WHILE           reduce using rule 11 (instruccion -> continueInst PTCOMA .)
    FOR             reduce using rule 11 (instruccion -> continueInst PTCOMA .)
    CONTINUE        reduce using rule 11 (instruccion -> continueInst PTCOMA .)
    BREAK           reduce using rule 11 (instruccion -> continueInst PTCOMA .)
    FUNCTION        reduce using rule 11 (instruccion -> continueInst PTCOMA .)
    PARSE           reduce using rule 11 (instruccion -> continueInst PTCOMA .)
    TRUNC           reduce using rule 11 (instruccion -> continueInst PTCOMA .)
    STRINGFUNC      reduce using rule 11 (instruccion -> continueInst PTCOMA .)
    RETURN          reduce using rule 11 (instruccion -> continueInst PTCOMA .)
    CORIZQ          reduce using rule 11 (instruccion -> continueInst PTCOMA .)
    $end            reduce using rule 11 (instruccion -> continueInst PTCOMA .)
    END             reduce using rule 11 (instruccion -> continueInst PTCOMA .)
    ELSE            reduce using rule 11 (instruccion -> continueInst PTCOMA .)
    ELSEIF          reduce using rule 11 (instruccion -> continueInst PTCOMA .)


state 43

    (12) instruccion -> breakInst PTCOMA .

    PRINT           reduce using rule 12 (instruccion -> breakInst PTCOMA .)
    PRINTLN         reduce using rule 12 (instruccion -> breakInst PTCOMA .)
    ID              reduce using rule 12 (instruccion -> breakInst PTCOMA .)
    MUTABLE         reduce using rule 12 (instruccion -> breakInst PTCOMA .)
    STRUCT          reduce using rule 12 (instruccion -> breakInst PTCOMA .)
    IF              reduce using rule 12 (instruccion -> breakInst PTCOMA .)
    WHILE           reduce using rule 12 (instruccion -> breakInst PTCOMA .)
    FOR             reduce using rule 12 (instruccion -> breakInst PTCOMA .)
    CONTINUE        reduce using rule 12 (instruccion -> breakInst PTCOMA .)
    BREAK           reduce using rule 12 (instruccion -> breakInst PTCOMA .)
    FUNCTION        reduce using rule 12 (instruccion -> breakInst PTCOMA .)
    PARSE           reduce using rule 12 (instruccion -> breakInst PTCOMA .)
    TRUNC           reduce using rule 12 (instruccion -> breakInst PTCOMA .)
    STRINGFUNC      reduce using rule 12 (instruccion -> breakInst PTCOMA .)
    RETURN          reduce using rule 12 (instruccion -> breakInst PTCOMA .)
    CORIZQ          reduce using rule 12 (instruccion -> breakInst PTCOMA .)
    $end            reduce using rule 12 (instruccion -> breakInst PTCOMA .)
    END             reduce using rule 12 (instruccion -> breakInst PTCOMA .)
    ELSE            reduce using rule 12 (instruccion -> breakInst PTCOMA .)
    ELSEIF          reduce using rule 12 (instruccion -> breakInst PTCOMA .)


state 44

    (13) instruccion -> funcionDecl PTCOMA .

    PRINT           reduce using rule 13 (instruccion -> funcionDecl PTCOMA .)
    PRINTLN         reduce using rule 13 (instruccion -> funcionDecl PTCOMA .)
    ID              reduce using rule 13 (instruccion -> funcionDecl PTCOMA .)
    MUTABLE         reduce using rule 13 (instruccion -> funcionDecl PTCOMA .)
    STRUCT          reduce using rule 13 (instruccion -> funcionDecl PTCOMA .)
    IF              reduce using rule 13 (instruccion -> funcionDecl PTCOMA .)
    WHILE           reduce using rule 13 (instruccion -> funcionDecl PTCOMA .)
    FOR             reduce using rule 13 (instruccion -> funcionDecl PTCOMA .)
    CONTINUE        reduce using rule 13 (instruccion -> funcionDecl PTCOMA .)
    BREAK           reduce using rule 13 (instruccion -> funcionDecl PTCOMA .)
    FUNCTION        reduce using rule 13 (instruccion -> funcionDecl PTCOMA .)
    PARSE           reduce using rule 13 (instruccion -> funcionDecl PTCOMA .)
    TRUNC           reduce using rule 13 (instruccion -> funcionDecl PTCOMA .)
    STRINGFUNC      reduce using rule 13 (instruccion -> funcionDecl PTCOMA .)
    RETURN          reduce using rule 13 (instruccion -> funcionDecl PTCOMA .)
    CORIZQ          reduce using rule 13 (instruccion -> funcionDecl PTCOMA .)
    $end            reduce using rule 13 (instruccion -> funcionDecl PTCOMA .)
    END             reduce using rule 13 (instruccion -> funcionDecl PTCOMA .)
    ELSE            reduce using rule 13 (instruccion -> funcionDecl PTCOMA .)
    ELSEIF          reduce using rule 13 (instruccion -> funcionDecl PTCOMA .)


state 45

    (14) instruccion -> llamadaExp PTCOMA .

    PRINT           reduce using rule 14 (instruccion -> llamadaExp PTCOMA .)
    PRINTLN         reduce using rule 14 (instruccion -> llamadaExp PTCOMA .)
    ID              reduce using rule 14 (instruccion -> llamadaExp PTCOMA .)
    MUTABLE         reduce using rule 14 (instruccion -> llamadaExp PTCOMA .)
    STRUCT          reduce using rule 14 (instruccion -> llamadaExp PTCOMA .)
    IF              reduce using rule 14 (instruccion -> llamadaExp PTCOMA .)
    WHILE           reduce using rule 14 (instruccion -> llamadaExp PTCOMA .)
    FOR             reduce using rule 14 (instruccion -> llamadaExp PTCOMA .)
    CONTINUE        reduce using rule 14 (instruccion -> llamadaExp PTCOMA .)
    BREAK           reduce using rule 14 (instruccion -> llamadaExp PTCOMA .)
    FUNCTION        reduce using rule 14 (instruccion -> llamadaExp PTCOMA .)
    PARSE           reduce using rule 14 (instruccion -> llamadaExp PTCOMA .)
    TRUNC           reduce using rule 14 (instruccion -> llamadaExp PTCOMA .)
    STRINGFUNC      reduce using rule 14 (instruccion -> llamadaExp PTCOMA .)
    RETURN          reduce using rule 14 (instruccion -> llamadaExp PTCOMA .)
    CORIZQ          reduce using rule 14 (instruccion -> llamadaExp PTCOMA .)
    $end            reduce using rule 14 (instruccion -> llamadaExp PTCOMA .)
    END             reduce using rule 14 (instruccion -> llamadaExp PTCOMA .)
    ELSE            reduce using rule 14 (instruccion -> llamadaExp PTCOMA .)
    ELSEIF          reduce using rule 14 (instruccion -> llamadaExp PTCOMA .)


state 46

    (15) instruccion -> returnInst PTCOMA .

    PRINT           reduce using rule 15 (instruccion -> returnInst PTCOMA .)
    PRINTLN         reduce using rule 15 (instruccion -> returnInst PTCOMA .)
    ID              reduce using rule 15 (instruccion -> returnInst PTCOMA .)
    MUTABLE         reduce using rule 15 (instruccion -> returnInst PTCOMA .)
    STRUCT          reduce using rule 15 (instruccion -> returnInst PTCOMA .)
    IF              reduce using rule 15 (instruccion -> returnInst PTCOMA .)
    WHILE           reduce using rule 15 (instruccion -> returnInst PTCOMA .)
    FOR             reduce using rule 15 (instruccion -> returnInst PTCOMA .)
    CONTINUE        reduce using rule 15 (instruccion -> returnInst PTCOMA .)
    BREAK           reduce using rule 15 (instruccion -> returnInst PTCOMA .)
    FUNCTION        reduce using rule 15 (instruccion -> returnInst PTCOMA .)
    PARSE           reduce using rule 15 (instruccion -> returnInst PTCOMA .)
    TRUNC           reduce using rule 15 (instruccion -> returnInst PTCOMA .)
    STRINGFUNC      reduce using rule 15 (instruccion -> returnInst PTCOMA .)
    RETURN          reduce using rule 15 (instruccion -> returnInst PTCOMA .)
    CORIZQ          reduce using rule 15 (instruccion -> returnInst PTCOMA .)
    $end            reduce using rule 15 (instruccion -> returnInst PTCOMA .)
    END             reduce using rule 15 (instruccion -> returnInst PTCOMA .)
    ELSE            reduce using rule 15 (instruccion -> returnInst PTCOMA .)
    ELSEIF          reduce using rule 15 (instruccion -> returnInst PTCOMA .)


state 47

    (30) printInst -> PRINT PARIZQ . paramExp PARDER
    (21) paramExp -> . paramExp COMA expresion
    (22) paramExp -> . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    paramExp                       shift and go to state 85
    expresion                      shift and go to state 84
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 48

    (31) printInst -> PRINTLN PARIZQ . paramExp PARDER
    (21) paramExp -> . paramExp COMA expresion
    (22) paramExp -> . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    paramExp                       shift and go to state 86
    expresion                      shift and go to state 84
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 49

    (32) asignacion -> ID IGUAL . expresion DOSPUNTOS DOSPUNTOS tipo
    (33) asignacion -> ID IGUAL . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 87
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 50

    (16) llamadaExp -> ID PARIZQ . paramExp PARDER
    (17) llamadaExp -> ID PARIZQ . PARDER
    (21) paramExp -> . paramExp COMA expresion
    (22) paramExp -> . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    PARDER          shift and go to state 89
    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    paramExp                       shift and go to state 88
    expresion                      shift and go to state 84
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 51

    (59) acceso -> ID PUNTO . ID
    (62) acceso -> ID PUNTO . arreglo
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    ID              shift and go to state 90
    CORIZQ          shift and go to state 33

    arreglo                        shift and go to state 91

state 52

    (50) arreglo -> ID listaIndices .
    (51) listaIndices -> listaIndices . indice
    (53) indice -> . CORIZQ expresion CORDER

  ! shift/reduce conflict for CORIZQ resolved as shift
    PUNTO           reduce using rule 50 (arreglo -> ID listaIndices .)
    IGUAL           reduce using rule 50 (arreglo -> ID listaIndices .)
    MAS             reduce using rule 50 (arreglo -> ID listaIndices .)
    MENOS           reduce using rule 50 (arreglo -> ID listaIndices .)
    POR             reduce using rule 50 (arreglo -> ID listaIndices .)
    DIVIDIDO        reduce using rule 50 (arreglo -> ID listaIndices .)
    POTENCIA        reduce using rule 50 (arreglo -> ID listaIndices .)
    MODULO          reduce using rule 50 (arreglo -> ID listaIndices .)
    MAYOR           reduce using rule 50 (arreglo -> ID listaIndices .)
    MENOR           reduce using rule 50 (arreglo -> ID listaIndices .)
    MAYIGUAL        reduce using rule 50 (arreglo -> ID listaIndices .)
    MENIGUAL        reduce using rule 50 (arreglo -> ID listaIndices .)
    IGUALDAD        reduce using rule 50 (arreglo -> ID listaIndices .)
    DISTINTO        reduce using rule 50 (arreglo -> ID listaIndices .)
    AND             reduce using rule 50 (arreglo -> ID listaIndices .)
    OR              reduce using rule 50 (arreglo -> ID listaIndices .)
    DOSPUNTOS       reduce using rule 50 (arreglo -> ID listaIndices .)
    PRINT           reduce using rule 50 (arreglo -> ID listaIndices .)
    PRINTLN         reduce using rule 50 (arreglo -> ID listaIndices .)
    ID              reduce using rule 50 (arreglo -> ID listaIndices .)
    MUTABLE         reduce using rule 50 (arreglo -> ID listaIndices .)
    STRUCT          reduce using rule 50 (arreglo -> ID listaIndices .)
    IF              reduce using rule 50 (arreglo -> ID listaIndices .)
    WHILE           reduce using rule 50 (arreglo -> ID listaIndices .)
    FOR             reduce using rule 50 (arreglo -> ID listaIndices .)
    CONTINUE        reduce using rule 50 (arreglo -> ID listaIndices .)
    BREAK           reduce using rule 50 (arreglo -> ID listaIndices .)
    FUNCTION        reduce using rule 50 (arreglo -> ID listaIndices .)
    PARSE           reduce using rule 50 (arreglo -> ID listaIndices .)
    TRUNC           reduce using rule 50 (arreglo -> ID listaIndices .)
    STRINGFUNC      reduce using rule 50 (arreglo -> ID listaIndices .)
    RETURN          reduce using rule 50 (arreglo -> ID listaIndices .)
    PTCOMA          reduce using rule 50 (arreglo -> ID listaIndices .)
    CORDER          reduce using rule 50 (arreglo -> ID listaIndices .)
    COMA            reduce using rule 50 (arreglo -> ID listaIndices .)
    PARDER          reduce using rule 50 (arreglo -> ID listaIndices .)
    CORIZQ          shift and go to state 54

  ! CORIZQ          [ reduce using rule 50 (arreglo -> ID listaIndices .) ]

    indice                         shift and go to state 92

state 53

    (52) listaIndices -> indice .

    CORIZQ          reduce using rule 52 (listaIndices -> indice .)
    PUNTO           reduce using rule 52 (listaIndices -> indice .)
    IGUAL           reduce using rule 52 (listaIndices -> indice .)
    MAS             reduce using rule 52 (listaIndices -> indice .)
    MENOS           reduce using rule 52 (listaIndices -> indice .)
    POR             reduce using rule 52 (listaIndices -> indice .)
    DIVIDIDO        reduce using rule 52 (listaIndices -> indice .)
    POTENCIA        reduce using rule 52 (listaIndices -> indice .)
    MODULO          reduce using rule 52 (listaIndices -> indice .)
    MAYOR           reduce using rule 52 (listaIndices -> indice .)
    MENOR           reduce using rule 52 (listaIndices -> indice .)
    MAYIGUAL        reduce using rule 52 (listaIndices -> indice .)
    MENIGUAL        reduce using rule 52 (listaIndices -> indice .)
    IGUALDAD        reduce using rule 52 (listaIndices -> indice .)
    DISTINTO        reduce using rule 52 (listaIndices -> indice .)
    AND             reduce using rule 52 (listaIndices -> indice .)
    OR              reduce using rule 52 (listaIndices -> indice .)
    DOSPUNTOS       reduce using rule 52 (listaIndices -> indice .)
    PRINT           reduce using rule 52 (listaIndices -> indice .)
    PRINTLN         reduce using rule 52 (listaIndices -> indice .)
    ID              reduce using rule 52 (listaIndices -> indice .)
    MUTABLE         reduce using rule 52 (listaIndices -> indice .)
    STRUCT          reduce using rule 52 (listaIndices -> indice .)
    IF              reduce using rule 52 (listaIndices -> indice .)
    WHILE           reduce using rule 52 (listaIndices -> indice .)
    FOR             reduce using rule 52 (listaIndices -> indice .)
    CONTINUE        reduce using rule 52 (listaIndices -> indice .)
    BREAK           reduce using rule 52 (listaIndices -> indice .)
    FUNCTION        reduce using rule 52 (listaIndices -> indice .)
    PARSE           reduce using rule 52 (listaIndices -> indice .)
    TRUNC           reduce using rule 52 (listaIndices -> indice .)
    STRINGFUNC      reduce using rule 52 (listaIndices -> indice .)
    RETURN          reduce using rule 52 (listaIndices -> indice .)
    PTCOMA          reduce using rule 52 (listaIndices -> indice .)
    CORDER          reduce using rule 52 (listaIndices -> indice .)
    COMA            reduce using rule 52 (listaIndices -> indice .)
    PARDER          reduce using rule 52 (listaIndices -> indice .)


state 54

    (53) indice -> CORIZQ . expresion CORDER
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 93
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 55

    (34) accesoAsignacion -> acceso IGUAL . expresion DOSPUNTOS DOSPUNTOS tipo
    (35) accesoAsignacion -> acceso IGUAL . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    acceso                         shift and go to state 71
    expresion                      shift and go to state 94
    rango                          shift and go to state 70
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 56

    (58) acceso -> acceso PUNTO . acceso
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    ID              shift and go to state 96
    CORIZQ          shift and go to state 33

    acceso                         shift and go to state 95
    arreglo                        shift and go to state 32

state 57

    (43) structs -> MUTABLE STRUCT . ID atributos END

    ID              shift and go to state 97


state 58

    (44) structs -> STRUCT ID . atributos END
    (45) atributos -> . atributos atributo
    (46) atributos -> . atributo
    (47) atributo -> . ID DOSPUNTOS DOSPUNTOS tipo PTCOMA
    (48) atributo -> . ID PTCOMA

    ID              shift and go to state 98

    atributos                      shift and go to state 99
    atributo                       shift and go to state 100

state 59

    (66) ifInst -> IF expresion . bloque END
    (67) ifInst -> IF expresion . bloque ELSE bloque END
    (68) ifInst -> IF expresion . bloque elseIfInst END
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END
    (65) bloque -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . printInst PTCOMA
    (5) instruccion -> . asignacion PTCOMA
    (6) instruccion -> . accesoAsignacion PTCOMA
    (7) instruccion -> . structs PTCOMA
    (8) instruccion -> . ifInst PTCOMA
    (9) instruccion -> . whileInst PTCOMA
    (10) instruccion -> . forInst PTCOMA
    (11) instruccion -> . continueInst PTCOMA
    (12) instruccion -> . breakInst PTCOMA
    (13) instruccion -> . funcionDecl PTCOMA
    (14) instruccion -> . llamadaExp PTCOMA
    (15) instruccion -> . returnInst PTCOMA
    (30) printInst -> . PRINT PARIZQ paramExp PARDER
    (31) printInst -> . PRINTLN PARIZQ paramExp PARDER
    (32) asignacion -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (33) asignacion -> . ID IGUAL expresion
    (34) accesoAsignacion -> . acceso IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (35) accesoAsignacion -> . acceso IGUAL expresion
    (43) structs -> . MUTABLE STRUCT ID atributos END
    (44) structs -> . STRUCT ID atributos END
    (66) ifInst -> . IF expresion bloque END
    (67) ifInst -> . IF expresion bloque ELSE bloque END
    (68) ifInst -> . IF expresion bloque elseIfInst END
    (72) whileInst -> . WHILE expresion bloque END
    (73) forInst -> . FOR ID IN expresion bloque END
    (74) continueInst -> . CONTINUE
    (75) breakInst -> . BREAK
    (23) funcionDecl -> . FUNCTION ID PARIZQ paramsDecl PARDER bloque END
    (24) funcionDecl -> . FUNCTION ID PARIZQ PARDER bloque END
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (29) returnInst -> . RETURN expresion
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107
    MAYOR           shift and go to state 108
    MENOR           shift and go to state 109
    MAYIGUAL        shift and go to state 110
    MENIGUAL        shift and go to state 111
    IGUALDAD        shift and go to state 112
    DISTINTO        shift and go to state 113
    AND             shift and go to state 114
    OR              shift and go to state 115
    DOSPUNTOS       shift and go to state 116
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 18
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    CONTINUE        shift and go to state 25
    BREAK           shift and go to state 26
    FUNCTION        shift and go to state 27
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    RETURN          shift and go to state 31
    CORIZQ          shift and go to state 33

    bloque                         shift and go to state 101
    instrucciones                  shift and go to state 117
    instruccion                    shift and go to state 3
    printInst                      shift and go to state 4
    asignacion                     shift and go to state 5
    accesoAsignacion               shift and go to state 6
    structs                        shift and go to state 7
    ifInst                         shift and go to state 8
    whileInst                      shift and go to state 9
    forInst                        shift and go to state 10
    continueInst                   shift and go to state 11
    breakInst                      shift and go to state 12
    funcionDecl                    shift and go to state 13
    llamadaExp                     shift and go to state 14
    returnInst                     shift and go to state 15
    acceso                         shift and go to state 19
    arreglo                        shift and go to state 32

state 60

    (90) expresion -> MENOS . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 118
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 61

    (91) expresion -> NOT . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 119
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 62

    (92) expresion -> PARIZQ . expresion PARDER
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 120
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 63

    (93) expresion -> ENTERO .

    MAS             reduce using rule 93 (expresion -> ENTERO .)
    MENOS           reduce using rule 93 (expresion -> ENTERO .)
    POR             reduce using rule 93 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 93 (expresion -> ENTERO .)
    POTENCIA        reduce using rule 93 (expresion -> ENTERO .)
    MODULO          reduce using rule 93 (expresion -> ENTERO .)
    MAYOR           reduce using rule 93 (expresion -> ENTERO .)
    MENOR           reduce using rule 93 (expresion -> ENTERO .)
    MAYIGUAL        reduce using rule 93 (expresion -> ENTERO .)
    MENIGUAL        reduce using rule 93 (expresion -> ENTERO .)
    IGUALDAD        reduce using rule 93 (expresion -> ENTERO .)
    DISTINTO        reduce using rule 93 (expresion -> ENTERO .)
    AND             reduce using rule 93 (expresion -> ENTERO .)
    OR              reduce using rule 93 (expresion -> ENTERO .)
    DOSPUNTOS       reduce using rule 93 (expresion -> ENTERO .)
    PRINT           reduce using rule 93 (expresion -> ENTERO .)
    PRINTLN         reduce using rule 93 (expresion -> ENTERO .)
    ID              reduce using rule 93 (expresion -> ENTERO .)
    MUTABLE         reduce using rule 93 (expresion -> ENTERO .)
    STRUCT          reduce using rule 93 (expresion -> ENTERO .)
    IF              reduce using rule 93 (expresion -> ENTERO .)
    WHILE           reduce using rule 93 (expresion -> ENTERO .)
    FOR             reduce using rule 93 (expresion -> ENTERO .)
    CONTINUE        reduce using rule 93 (expresion -> ENTERO .)
    BREAK           reduce using rule 93 (expresion -> ENTERO .)
    FUNCTION        reduce using rule 93 (expresion -> ENTERO .)
    PARSE           reduce using rule 93 (expresion -> ENTERO .)
    TRUNC           reduce using rule 93 (expresion -> ENTERO .)
    STRINGFUNC      reduce using rule 93 (expresion -> ENTERO .)
    RETURN          reduce using rule 93 (expresion -> ENTERO .)
    CORIZQ          reduce using rule 93 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 93 (expresion -> ENTERO .)
    CORDER          reduce using rule 93 (expresion -> ENTERO .)
    COMA            reduce using rule 93 (expresion -> ENTERO .)
    PARDER          reduce using rule 93 (expresion -> ENTERO .)


state 64

    (94) expresion -> DECIMAL .

    MAS             reduce using rule 94 (expresion -> DECIMAL .)
    MENOS           reduce using rule 94 (expresion -> DECIMAL .)
    POR             reduce using rule 94 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 94 (expresion -> DECIMAL .)
    POTENCIA        reduce using rule 94 (expresion -> DECIMAL .)
    MODULO          reduce using rule 94 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 94 (expresion -> DECIMAL .)
    MENOR           reduce using rule 94 (expresion -> DECIMAL .)
    MAYIGUAL        reduce using rule 94 (expresion -> DECIMAL .)
    MENIGUAL        reduce using rule 94 (expresion -> DECIMAL .)
    IGUALDAD        reduce using rule 94 (expresion -> DECIMAL .)
    DISTINTO        reduce using rule 94 (expresion -> DECIMAL .)
    AND             reduce using rule 94 (expresion -> DECIMAL .)
    OR              reduce using rule 94 (expresion -> DECIMAL .)
    DOSPUNTOS       reduce using rule 94 (expresion -> DECIMAL .)
    PRINT           reduce using rule 94 (expresion -> DECIMAL .)
    PRINTLN         reduce using rule 94 (expresion -> DECIMAL .)
    ID              reduce using rule 94 (expresion -> DECIMAL .)
    MUTABLE         reduce using rule 94 (expresion -> DECIMAL .)
    STRUCT          reduce using rule 94 (expresion -> DECIMAL .)
    IF              reduce using rule 94 (expresion -> DECIMAL .)
    WHILE           reduce using rule 94 (expresion -> DECIMAL .)
    FOR             reduce using rule 94 (expresion -> DECIMAL .)
    CONTINUE        reduce using rule 94 (expresion -> DECIMAL .)
    BREAK           reduce using rule 94 (expresion -> DECIMAL .)
    FUNCTION        reduce using rule 94 (expresion -> DECIMAL .)
    PARSE           reduce using rule 94 (expresion -> DECIMAL .)
    TRUNC           reduce using rule 94 (expresion -> DECIMAL .)
    STRINGFUNC      reduce using rule 94 (expresion -> DECIMAL .)
    RETURN          reduce using rule 94 (expresion -> DECIMAL .)
    CORIZQ          reduce using rule 94 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 94 (expresion -> DECIMAL .)
    CORDER          reduce using rule 94 (expresion -> DECIMAL .)
    COMA            reduce using rule 94 (expresion -> DECIMAL .)
    PARDER          reduce using rule 94 (expresion -> DECIMAL .)


state 65

    (95) expresion -> STRING .

    MAS             reduce using rule 95 (expresion -> STRING .)
    MENOS           reduce using rule 95 (expresion -> STRING .)
    POR             reduce using rule 95 (expresion -> STRING .)
    DIVIDIDO        reduce using rule 95 (expresion -> STRING .)
    POTENCIA        reduce using rule 95 (expresion -> STRING .)
    MODULO          reduce using rule 95 (expresion -> STRING .)
    MAYOR           reduce using rule 95 (expresion -> STRING .)
    MENOR           reduce using rule 95 (expresion -> STRING .)
    MAYIGUAL        reduce using rule 95 (expresion -> STRING .)
    MENIGUAL        reduce using rule 95 (expresion -> STRING .)
    IGUALDAD        reduce using rule 95 (expresion -> STRING .)
    DISTINTO        reduce using rule 95 (expresion -> STRING .)
    AND             reduce using rule 95 (expresion -> STRING .)
    OR              reduce using rule 95 (expresion -> STRING .)
    DOSPUNTOS       reduce using rule 95 (expresion -> STRING .)
    PRINT           reduce using rule 95 (expresion -> STRING .)
    PRINTLN         reduce using rule 95 (expresion -> STRING .)
    ID              reduce using rule 95 (expresion -> STRING .)
    MUTABLE         reduce using rule 95 (expresion -> STRING .)
    STRUCT          reduce using rule 95 (expresion -> STRING .)
    IF              reduce using rule 95 (expresion -> STRING .)
    WHILE           reduce using rule 95 (expresion -> STRING .)
    FOR             reduce using rule 95 (expresion -> STRING .)
    CONTINUE        reduce using rule 95 (expresion -> STRING .)
    BREAK           reduce using rule 95 (expresion -> STRING .)
    FUNCTION        reduce using rule 95 (expresion -> STRING .)
    PARSE           reduce using rule 95 (expresion -> STRING .)
    TRUNC           reduce using rule 95 (expresion -> STRING .)
    STRINGFUNC      reduce using rule 95 (expresion -> STRING .)
    RETURN          reduce using rule 95 (expresion -> STRING .)
    CORIZQ          reduce using rule 95 (expresion -> STRING .)
    PTCOMA          reduce using rule 95 (expresion -> STRING .)
    CORDER          reduce using rule 95 (expresion -> STRING .)
    COMA            reduce using rule 95 (expresion -> STRING .)
    PARDER          reduce using rule 95 (expresion -> STRING .)


state 66

    (96) expresion -> CHAR .

    MAS             reduce using rule 96 (expresion -> CHAR .)
    MENOS           reduce using rule 96 (expresion -> CHAR .)
    POR             reduce using rule 96 (expresion -> CHAR .)
    DIVIDIDO        reduce using rule 96 (expresion -> CHAR .)
    POTENCIA        reduce using rule 96 (expresion -> CHAR .)
    MODULO          reduce using rule 96 (expresion -> CHAR .)
    MAYOR           reduce using rule 96 (expresion -> CHAR .)
    MENOR           reduce using rule 96 (expresion -> CHAR .)
    MAYIGUAL        reduce using rule 96 (expresion -> CHAR .)
    MENIGUAL        reduce using rule 96 (expresion -> CHAR .)
    IGUALDAD        reduce using rule 96 (expresion -> CHAR .)
    DISTINTO        reduce using rule 96 (expresion -> CHAR .)
    AND             reduce using rule 96 (expresion -> CHAR .)
    OR              reduce using rule 96 (expresion -> CHAR .)
    DOSPUNTOS       reduce using rule 96 (expresion -> CHAR .)
    PRINT           reduce using rule 96 (expresion -> CHAR .)
    PRINTLN         reduce using rule 96 (expresion -> CHAR .)
    ID              reduce using rule 96 (expresion -> CHAR .)
    MUTABLE         reduce using rule 96 (expresion -> CHAR .)
    STRUCT          reduce using rule 96 (expresion -> CHAR .)
    IF              reduce using rule 96 (expresion -> CHAR .)
    WHILE           reduce using rule 96 (expresion -> CHAR .)
    FOR             reduce using rule 96 (expresion -> CHAR .)
    CONTINUE        reduce using rule 96 (expresion -> CHAR .)
    BREAK           reduce using rule 96 (expresion -> CHAR .)
    FUNCTION        reduce using rule 96 (expresion -> CHAR .)
    PARSE           reduce using rule 96 (expresion -> CHAR .)
    TRUNC           reduce using rule 96 (expresion -> CHAR .)
    STRINGFUNC      reduce using rule 96 (expresion -> CHAR .)
    RETURN          reduce using rule 96 (expresion -> CHAR .)
    CORIZQ          reduce using rule 96 (expresion -> CHAR .)
    PTCOMA          reduce using rule 96 (expresion -> CHAR .)
    CORDER          reduce using rule 96 (expresion -> CHAR .)
    COMA            reduce using rule 96 (expresion -> CHAR .)
    PARDER          reduce using rule 96 (expresion -> CHAR .)


state 67

    (97) expresion -> TRUE .

    MAS             reduce using rule 97 (expresion -> TRUE .)
    MENOS           reduce using rule 97 (expresion -> TRUE .)
    POR             reduce using rule 97 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 97 (expresion -> TRUE .)
    POTENCIA        reduce using rule 97 (expresion -> TRUE .)
    MODULO          reduce using rule 97 (expresion -> TRUE .)
    MAYOR           reduce using rule 97 (expresion -> TRUE .)
    MENOR           reduce using rule 97 (expresion -> TRUE .)
    MAYIGUAL        reduce using rule 97 (expresion -> TRUE .)
    MENIGUAL        reduce using rule 97 (expresion -> TRUE .)
    IGUALDAD        reduce using rule 97 (expresion -> TRUE .)
    DISTINTO        reduce using rule 97 (expresion -> TRUE .)
    AND             reduce using rule 97 (expresion -> TRUE .)
    OR              reduce using rule 97 (expresion -> TRUE .)
    DOSPUNTOS       reduce using rule 97 (expresion -> TRUE .)
    PRINT           reduce using rule 97 (expresion -> TRUE .)
    PRINTLN         reduce using rule 97 (expresion -> TRUE .)
    ID              reduce using rule 97 (expresion -> TRUE .)
    MUTABLE         reduce using rule 97 (expresion -> TRUE .)
    STRUCT          reduce using rule 97 (expresion -> TRUE .)
    IF              reduce using rule 97 (expresion -> TRUE .)
    WHILE           reduce using rule 97 (expresion -> TRUE .)
    FOR             reduce using rule 97 (expresion -> TRUE .)
    CONTINUE        reduce using rule 97 (expresion -> TRUE .)
    BREAK           reduce using rule 97 (expresion -> TRUE .)
    FUNCTION        reduce using rule 97 (expresion -> TRUE .)
    PARSE           reduce using rule 97 (expresion -> TRUE .)
    TRUNC           reduce using rule 97 (expresion -> TRUE .)
    STRINGFUNC      reduce using rule 97 (expresion -> TRUE .)
    RETURN          reduce using rule 97 (expresion -> TRUE .)
    CORIZQ          reduce using rule 97 (expresion -> TRUE .)
    PTCOMA          reduce using rule 97 (expresion -> TRUE .)
    CORDER          reduce using rule 97 (expresion -> TRUE .)
    COMA            reduce using rule 97 (expresion -> TRUE .)
    PARDER          reduce using rule 97 (expresion -> TRUE .)


state 68

    (98) expresion -> FALSE .

    MAS             reduce using rule 98 (expresion -> FALSE .)
    MENOS           reduce using rule 98 (expresion -> FALSE .)
    POR             reduce using rule 98 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 98 (expresion -> FALSE .)
    POTENCIA        reduce using rule 98 (expresion -> FALSE .)
    MODULO          reduce using rule 98 (expresion -> FALSE .)
    MAYOR           reduce using rule 98 (expresion -> FALSE .)
    MENOR           reduce using rule 98 (expresion -> FALSE .)
    MAYIGUAL        reduce using rule 98 (expresion -> FALSE .)
    MENIGUAL        reduce using rule 98 (expresion -> FALSE .)
    IGUALDAD        reduce using rule 98 (expresion -> FALSE .)
    DISTINTO        reduce using rule 98 (expresion -> FALSE .)
    AND             reduce using rule 98 (expresion -> FALSE .)
    OR              reduce using rule 98 (expresion -> FALSE .)
    DOSPUNTOS       reduce using rule 98 (expresion -> FALSE .)
    PRINT           reduce using rule 98 (expresion -> FALSE .)
    PRINTLN         reduce using rule 98 (expresion -> FALSE .)
    ID              reduce using rule 98 (expresion -> FALSE .)
    MUTABLE         reduce using rule 98 (expresion -> FALSE .)
    STRUCT          reduce using rule 98 (expresion -> FALSE .)
    IF              reduce using rule 98 (expresion -> FALSE .)
    WHILE           reduce using rule 98 (expresion -> FALSE .)
    FOR             reduce using rule 98 (expresion -> FALSE .)
    CONTINUE        reduce using rule 98 (expresion -> FALSE .)
    BREAK           reduce using rule 98 (expresion -> FALSE .)
    FUNCTION        reduce using rule 98 (expresion -> FALSE .)
    PARSE           reduce using rule 98 (expresion -> FALSE .)
    TRUNC           reduce using rule 98 (expresion -> FALSE .)
    STRINGFUNC      reduce using rule 98 (expresion -> FALSE .)
    RETURN          reduce using rule 98 (expresion -> FALSE .)
    CORIZQ          reduce using rule 98 (expresion -> FALSE .)
    PTCOMA          reduce using rule 98 (expresion -> FALSE .)
    CORDER          reduce using rule 98 (expresion -> FALSE .)
    COMA            reduce using rule 98 (expresion -> FALSE .)
    PARDER          reduce using rule 98 (expresion -> FALSE .)


state 69

    (99) expresion -> NOTHING .

    MAS             reduce using rule 99 (expresion -> NOTHING .)
    MENOS           reduce using rule 99 (expresion -> NOTHING .)
    POR             reduce using rule 99 (expresion -> NOTHING .)
    DIVIDIDO        reduce using rule 99 (expresion -> NOTHING .)
    POTENCIA        reduce using rule 99 (expresion -> NOTHING .)
    MODULO          reduce using rule 99 (expresion -> NOTHING .)
    MAYOR           reduce using rule 99 (expresion -> NOTHING .)
    MENOR           reduce using rule 99 (expresion -> NOTHING .)
    MAYIGUAL        reduce using rule 99 (expresion -> NOTHING .)
    MENIGUAL        reduce using rule 99 (expresion -> NOTHING .)
    IGUALDAD        reduce using rule 99 (expresion -> NOTHING .)
    DISTINTO        reduce using rule 99 (expresion -> NOTHING .)
    AND             reduce using rule 99 (expresion -> NOTHING .)
    OR              reduce using rule 99 (expresion -> NOTHING .)
    DOSPUNTOS       reduce using rule 99 (expresion -> NOTHING .)
    PRINT           reduce using rule 99 (expresion -> NOTHING .)
    PRINTLN         reduce using rule 99 (expresion -> NOTHING .)
    ID              reduce using rule 99 (expresion -> NOTHING .)
    MUTABLE         reduce using rule 99 (expresion -> NOTHING .)
    STRUCT          reduce using rule 99 (expresion -> NOTHING .)
    IF              reduce using rule 99 (expresion -> NOTHING .)
    WHILE           reduce using rule 99 (expresion -> NOTHING .)
    FOR             reduce using rule 99 (expresion -> NOTHING .)
    CONTINUE        reduce using rule 99 (expresion -> NOTHING .)
    BREAK           reduce using rule 99 (expresion -> NOTHING .)
    FUNCTION        reduce using rule 99 (expresion -> NOTHING .)
    PARSE           reduce using rule 99 (expresion -> NOTHING .)
    TRUNC           reduce using rule 99 (expresion -> NOTHING .)
    STRINGFUNC      reduce using rule 99 (expresion -> NOTHING .)
    RETURN          reduce using rule 99 (expresion -> NOTHING .)
    CORIZQ          reduce using rule 99 (expresion -> NOTHING .)
    PTCOMA          reduce using rule 99 (expresion -> NOTHING .)
    CORDER          reduce using rule 99 (expresion -> NOTHING .)
    COMA            reduce using rule 99 (expresion -> NOTHING .)
    PARDER          reduce using rule 99 (expresion -> NOTHING .)


state 70

    (100) expresion -> rango .

    MAS             reduce using rule 100 (expresion -> rango .)
    MENOS           reduce using rule 100 (expresion -> rango .)
    POR             reduce using rule 100 (expresion -> rango .)
    DIVIDIDO        reduce using rule 100 (expresion -> rango .)
    POTENCIA        reduce using rule 100 (expresion -> rango .)
    MODULO          reduce using rule 100 (expresion -> rango .)
    MAYOR           reduce using rule 100 (expresion -> rango .)
    MENOR           reduce using rule 100 (expresion -> rango .)
    MAYIGUAL        reduce using rule 100 (expresion -> rango .)
    MENIGUAL        reduce using rule 100 (expresion -> rango .)
    IGUALDAD        reduce using rule 100 (expresion -> rango .)
    DISTINTO        reduce using rule 100 (expresion -> rango .)
    AND             reduce using rule 100 (expresion -> rango .)
    OR              reduce using rule 100 (expresion -> rango .)
    DOSPUNTOS       reduce using rule 100 (expresion -> rango .)
    PRINT           reduce using rule 100 (expresion -> rango .)
    PRINTLN         reduce using rule 100 (expresion -> rango .)
    ID              reduce using rule 100 (expresion -> rango .)
    MUTABLE         reduce using rule 100 (expresion -> rango .)
    STRUCT          reduce using rule 100 (expresion -> rango .)
    IF              reduce using rule 100 (expresion -> rango .)
    WHILE           reduce using rule 100 (expresion -> rango .)
    FOR             reduce using rule 100 (expresion -> rango .)
    CONTINUE        reduce using rule 100 (expresion -> rango .)
    BREAK           reduce using rule 100 (expresion -> rango .)
    FUNCTION        reduce using rule 100 (expresion -> rango .)
    PARSE           reduce using rule 100 (expresion -> rango .)
    TRUNC           reduce using rule 100 (expresion -> rango .)
    STRINGFUNC      reduce using rule 100 (expresion -> rango .)
    RETURN          reduce using rule 100 (expresion -> rango .)
    CORIZQ          reduce using rule 100 (expresion -> rango .)
    PTCOMA          reduce using rule 100 (expresion -> rango .)
    CORDER          reduce using rule 100 (expresion -> rango .)
    COMA            reduce using rule 100 (expresion -> rango .)
    PARDER          reduce using rule 100 (expresion -> rango .)


state 71

    (101) expresion -> acceso .
    (58) acceso -> acceso . PUNTO acceso

    MAS             reduce using rule 101 (expresion -> acceso .)
    MENOS           reduce using rule 101 (expresion -> acceso .)
    POR             reduce using rule 101 (expresion -> acceso .)
    DIVIDIDO        reduce using rule 101 (expresion -> acceso .)
    POTENCIA        reduce using rule 101 (expresion -> acceso .)
    MODULO          reduce using rule 101 (expresion -> acceso .)
    MAYOR           reduce using rule 101 (expresion -> acceso .)
    MENOR           reduce using rule 101 (expresion -> acceso .)
    MAYIGUAL        reduce using rule 101 (expresion -> acceso .)
    MENIGUAL        reduce using rule 101 (expresion -> acceso .)
    IGUALDAD        reduce using rule 101 (expresion -> acceso .)
    DISTINTO        reduce using rule 101 (expresion -> acceso .)
    AND             reduce using rule 101 (expresion -> acceso .)
    OR              reduce using rule 101 (expresion -> acceso .)
    DOSPUNTOS       reduce using rule 101 (expresion -> acceso .)
    PRINT           reduce using rule 101 (expresion -> acceso .)
    PRINTLN         reduce using rule 101 (expresion -> acceso .)
    ID              reduce using rule 101 (expresion -> acceso .)
    MUTABLE         reduce using rule 101 (expresion -> acceso .)
    STRUCT          reduce using rule 101 (expresion -> acceso .)
    IF              reduce using rule 101 (expresion -> acceso .)
    WHILE           reduce using rule 101 (expresion -> acceso .)
    FOR             reduce using rule 101 (expresion -> acceso .)
    CONTINUE        reduce using rule 101 (expresion -> acceso .)
    BREAK           reduce using rule 101 (expresion -> acceso .)
    FUNCTION        reduce using rule 101 (expresion -> acceso .)
    PARSE           reduce using rule 101 (expresion -> acceso .)
    TRUNC           reduce using rule 101 (expresion -> acceso .)
    STRINGFUNC      reduce using rule 101 (expresion -> acceso .)
    RETURN          reduce using rule 101 (expresion -> acceso .)
    CORIZQ          reduce using rule 101 (expresion -> acceso .)
    PTCOMA          reduce using rule 101 (expresion -> acceso .)
    CORDER          reduce using rule 101 (expresion -> acceso .)
    COMA            reduce using rule 101 (expresion -> acceso .)
    PARDER          reduce using rule 101 (expresion -> acceso .)
    PUNTO           shift and go to state 56


state 72

    (102) expresion -> llamadaExp .

    MAS             reduce using rule 102 (expresion -> llamadaExp .)
    MENOS           reduce using rule 102 (expresion -> llamadaExp .)
    POR             reduce using rule 102 (expresion -> llamadaExp .)
    DIVIDIDO        reduce using rule 102 (expresion -> llamadaExp .)
    POTENCIA        reduce using rule 102 (expresion -> llamadaExp .)
    MODULO          reduce using rule 102 (expresion -> llamadaExp .)
    MAYOR           reduce using rule 102 (expresion -> llamadaExp .)
    MENOR           reduce using rule 102 (expresion -> llamadaExp .)
    MAYIGUAL        reduce using rule 102 (expresion -> llamadaExp .)
    MENIGUAL        reduce using rule 102 (expresion -> llamadaExp .)
    IGUALDAD        reduce using rule 102 (expresion -> llamadaExp .)
    DISTINTO        reduce using rule 102 (expresion -> llamadaExp .)
    AND             reduce using rule 102 (expresion -> llamadaExp .)
    OR              reduce using rule 102 (expresion -> llamadaExp .)
    DOSPUNTOS       reduce using rule 102 (expresion -> llamadaExp .)
    PRINT           reduce using rule 102 (expresion -> llamadaExp .)
    PRINTLN         reduce using rule 102 (expresion -> llamadaExp .)
    ID              reduce using rule 102 (expresion -> llamadaExp .)
    MUTABLE         reduce using rule 102 (expresion -> llamadaExp .)
    STRUCT          reduce using rule 102 (expresion -> llamadaExp .)
    IF              reduce using rule 102 (expresion -> llamadaExp .)
    WHILE           reduce using rule 102 (expresion -> llamadaExp .)
    FOR             reduce using rule 102 (expresion -> llamadaExp .)
    CONTINUE        reduce using rule 102 (expresion -> llamadaExp .)
    BREAK           reduce using rule 102 (expresion -> llamadaExp .)
    FUNCTION        reduce using rule 102 (expresion -> llamadaExp .)
    PARSE           reduce using rule 102 (expresion -> llamadaExp .)
    TRUNC           reduce using rule 102 (expresion -> llamadaExp .)
    STRINGFUNC      reduce using rule 102 (expresion -> llamadaExp .)
    RETURN          reduce using rule 102 (expresion -> llamadaExp .)
    CORIZQ          reduce using rule 102 (expresion -> llamadaExp .)
    PTCOMA          reduce using rule 102 (expresion -> llamadaExp .)
    CORDER          reduce using rule 102 (expresion -> llamadaExp .)
    COMA            reduce using rule 102 (expresion -> llamadaExp .)
    PARDER          reduce using rule 102 (expresion -> llamadaExp .)


state 73

    (55) rango -> BEGIN . DOSPUNTOS expresion
    (57) rango -> BEGIN . DOSPUNTOS END

    DOSPUNTOS       shift and go to state 121


state 74

    (59) acceso -> ID . PUNTO ID
    (62) acceso -> ID . PUNTO arreglo
    (63) acceso -> ID .
    (16) llamadaExp -> ID . PARIZQ paramExp PARDER
    (17) llamadaExp -> ID . PARIZQ PARDER
    (50) arreglo -> ID . listaIndices
    (51) listaIndices -> . listaIndices indice
    (52) listaIndices -> . indice
    (53) indice -> . CORIZQ expresion CORDER

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
    PUNTO           shift and go to state 51
    MAS             reduce using rule 63 (acceso -> ID .)
    MENOS           reduce using rule 63 (acceso -> ID .)
    POR             reduce using rule 63 (acceso -> ID .)
    DIVIDIDO        reduce using rule 63 (acceso -> ID .)
    POTENCIA        reduce using rule 63 (acceso -> ID .)
    MODULO          reduce using rule 63 (acceso -> ID .)
    MAYOR           reduce using rule 63 (acceso -> ID .)
    MENOR           reduce using rule 63 (acceso -> ID .)
    MAYIGUAL        reduce using rule 63 (acceso -> ID .)
    MENIGUAL        reduce using rule 63 (acceso -> ID .)
    IGUALDAD        reduce using rule 63 (acceso -> ID .)
    DISTINTO        reduce using rule 63 (acceso -> ID .)
    AND             reduce using rule 63 (acceso -> ID .)
    OR              reduce using rule 63 (acceso -> ID .)
    DOSPUNTOS       reduce using rule 63 (acceso -> ID .)
    PRINT           reduce using rule 63 (acceso -> ID .)
    PRINTLN         reduce using rule 63 (acceso -> ID .)
    ID              reduce using rule 63 (acceso -> ID .)
    MUTABLE         reduce using rule 63 (acceso -> ID .)
    STRUCT          reduce using rule 63 (acceso -> ID .)
    IF              reduce using rule 63 (acceso -> ID .)
    WHILE           reduce using rule 63 (acceso -> ID .)
    FOR             reduce using rule 63 (acceso -> ID .)
    CONTINUE        reduce using rule 63 (acceso -> ID .)
    BREAK           reduce using rule 63 (acceso -> ID .)
    FUNCTION        reduce using rule 63 (acceso -> ID .)
    PARSE           reduce using rule 63 (acceso -> ID .)
    TRUNC           reduce using rule 63 (acceso -> ID .)
    STRINGFUNC      reduce using rule 63 (acceso -> ID .)
    RETURN          reduce using rule 63 (acceso -> ID .)
    PTCOMA          reduce using rule 63 (acceso -> ID .)
    CORDER          reduce using rule 63 (acceso -> ID .)
    COMA            reduce using rule 63 (acceso -> ID .)
    PARDER          reduce using rule 63 (acceso -> ID .)
    PARIZQ          shift and go to state 50
    CORIZQ          shift and go to state 54

  ! PUNTO           [ reduce using rule 63 (acceso -> ID .) ]
  ! CORIZQ          [ reduce using rule 63 (acceso -> ID .) ]

    listaIndices                   shift and go to state 52
    indice                         shift and go to state 53

state 75

    (72) whileInst -> WHILE expresion . bloque END
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END
    (65) bloque -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . printInst PTCOMA
    (5) instruccion -> . asignacion PTCOMA
    (6) instruccion -> . accesoAsignacion PTCOMA
    (7) instruccion -> . structs PTCOMA
    (8) instruccion -> . ifInst PTCOMA
    (9) instruccion -> . whileInst PTCOMA
    (10) instruccion -> . forInst PTCOMA
    (11) instruccion -> . continueInst PTCOMA
    (12) instruccion -> . breakInst PTCOMA
    (13) instruccion -> . funcionDecl PTCOMA
    (14) instruccion -> . llamadaExp PTCOMA
    (15) instruccion -> . returnInst PTCOMA
    (30) printInst -> . PRINT PARIZQ paramExp PARDER
    (31) printInst -> . PRINTLN PARIZQ paramExp PARDER
    (32) asignacion -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (33) asignacion -> . ID IGUAL expresion
    (34) accesoAsignacion -> . acceso IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (35) accesoAsignacion -> . acceso IGUAL expresion
    (43) structs -> . MUTABLE STRUCT ID atributos END
    (44) structs -> . STRUCT ID atributos END
    (66) ifInst -> . IF expresion bloque END
    (67) ifInst -> . IF expresion bloque ELSE bloque END
    (68) ifInst -> . IF expresion bloque elseIfInst END
    (72) whileInst -> . WHILE expresion bloque END
    (73) forInst -> . FOR ID IN expresion bloque END
    (74) continueInst -> . CONTINUE
    (75) breakInst -> . BREAK
    (23) funcionDecl -> . FUNCTION ID PARIZQ paramsDecl PARDER bloque END
    (24) funcionDecl -> . FUNCTION ID PARIZQ PARDER bloque END
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (29) returnInst -> . RETURN expresion
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107
    MAYOR           shift and go to state 108
    MENOR           shift and go to state 109
    MAYIGUAL        shift and go to state 110
    MENIGUAL        shift and go to state 111
    IGUALDAD        shift and go to state 112
    DISTINTO        shift and go to state 113
    AND             shift and go to state 114
    OR              shift and go to state 115
    DOSPUNTOS       shift and go to state 116
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 18
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    CONTINUE        shift and go to state 25
    BREAK           shift and go to state 26
    FUNCTION        shift and go to state 27
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    RETURN          shift and go to state 31
    CORIZQ          shift and go to state 33

    bloque                         shift and go to state 122
    instrucciones                  shift and go to state 117
    instruccion                    shift and go to state 3
    printInst                      shift and go to state 4
    asignacion                     shift and go to state 5
    accesoAsignacion               shift and go to state 6
    structs                        shift and go to state 7
    ifInst                         shift and go to state 8
    whileInst                      shift and go to state 9
    forInst                        shift and go to state 10
    continueInst                   shift and go to state 11
    breakInst                      shift and go to state 12
    funcionDecl                    shift and go to state 13
    llamadaExp                     shift and go to state 14
    returnInst                     shift and go to state 15
    acceso                         shift and go to state 19
    arreglo                        shift and go to state 32

state 76

    (73) forInst -> FOR ID . IN expresion bloque END

    IN              shift and go to state 123


state 77

    (23) funcionDecl -> FUNCTION ID . PARIZQ paramsDecl PARDER bloque END
    (24) funcionDecl -> FUNCTION ID . PARIZQ PARDER bloque END

    PARIZQ          shift and go to state 124


state 78

    (18) llamadaExp -> PARSE PARIZQ . tipo COMA expresion PARDER
    (36) tipo -> . TINT64
    (37) tipo -> . TFLOAT64
    (38) tipo -> . TSTRING
    (39) tipo -> . TBOOL
    (40) tipo -> . TCHAR
    (41) tipo -> . TNULO
    (42) tipo -> . ID

    TINT64          shift and go to state 126
    TFLOAT64        shift and go to state 127
    TSTRING         shift and go to state 128
    TBOOL           shift and go to state 129
    TCHAR           shift and go to state 130
    TNULO           shift and go to state 131
    ID              shift and go to state 132

    tipo                           shift and go to state 125

state 79

    (19) llamadaExp -> TRUNC PARIZQ . tipo COMA expresion PARDER
    (36) tipo -> . TINT64
    (37) tipo -> . TFLOAT64
    (38) tipo -> . TSTRING
    (39) tipo -> . TBOOL
    (40) tipo -> . TCHAR
    (41) tipo -> . TNULO
    (42) tipo -> . ID

    TINT64          shift and go to state 126
    TFLOAT64        shift and go to state 127
    TSTRING         shift and go to state 128
    TBOOL           shift and go to state 129
    TCHAR           shift and go to state 130
    TNULO           shift and go to state 131
    ID              shift and go to state 132

    tipo                           shift and go to state 133

state 80

    (20) llamadaExp -> STRINGFUNC PARIZQ . expresion PARDER
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 134
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 81

    (29) returnInst -> RETURN expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    PTCOMA          reduce using rule 29 (returnInst -> RETURN expresion .)
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107
    MAYOR           shift and go to state 108
    MENOR           shift and go to state 109
    MAYIGUAL        shift and go to state 110
    MENIGUAL        shift and go to state 111
    IGUALDAD        shift and go to state 112
    DISTINTO        shift and go to state 113
    AND             shift and go to state 114
    OR              shift and go to state 115
    DOSPUNTOS       shift and go to state 116


state 82

    (60) acceso -> arreglo PUNTO . arreglo
    (61) acceso -> arreglo PUNTO . ID
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    ID              shift and go to state 136
    CORIZQ          shift and go to state 33

    arreglo                        shift and go to state 135

state 83

    (49) arreglo -> CORIZQ paramExp . CORDER
    (21) paramExp -> paramExp . COMA expresion

    CORDER          shift and go to state 137
    COMA            shift and go to state 138


state 84

    (22) paramExp -> expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    CORDER          reduce using rule 22 (paramExp -> expresion .)
    COMA            reduce using rule 22 (paramExp -> expresion .)
    PARDER          reduce using rule 22 (paramExp -> expresion .)
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107
    MAYOR           shift and go to state 108
    MENOR           shift and go to state 109
    MAYIGUAL        shift and go to state 110
    MENIGUAL        shift and go to state 111
    IGUALDAD        shift and go to state 112
    DISTINTO        shift and go to state 113
    AND             shift and go to state 114
    OR              shift and go to state 115
    DOSPUNTOS       shift and go to state 116


state 85

    (30) printInst -> PRINT PARIZQ paramExp . PARDER
    (21) paramExp -> paramExp . COMA expresion

    PARDER          shift and go to state 139
    COMA            shift and go to state 138


state 86

    (31) printInst -> PRINTLN PARIZQ paramExp . PARDER
    (21) paramExp -> paramExp . COMA expresion

    PARDER          shift and go to state 140
    COMA            shift and go to state 138


state 87

    (32) asignacion -> ID IGUAL expresion . DOSPUNTOS DOSPUNTOS tipo
    (33) asignacion -> ID IGUAL expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    DOSPUNTOS       shift and go to state 141
    PTCOMA          reduce using rule 33 (asignacion -> ID IGUAL expresion .)
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107
    MAYOR           shift and go to state 108
    MENOR           shift and go to state 109
    MAYIGUAL        shift and go to state 110
    MENIGUAL        shift and go to state 111
    IGUALDAD        shift and go to state 112
    DISTINTO        shift and go to state 113
    AND             shift and go to state 114
    OR              shift and go to state 115


state 88

    (16) llamadaExp -> ID PARIZQ paramExp . PARDER
    (21) paramExp -> paramExp . COMA expresion

    PARDER          shift and go to state 142
    COMA            shift and go to state 138


state 89

    (17) llamadaExp -> ID PARIZQ PARDER .

    PTCOMA          reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    MAS             reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    POR             reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    POTENCIA        reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    MODULO          reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    MAYOR           reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    MENOR           reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    MAYIGUAL        reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    MENIGUAL        reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    IGUALDAD        reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    DISTINTO        reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    AND             reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    OR              reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    DOSPUNTOS       reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    PRINT           reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    PRINTLN         reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    ID              reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    MUTABLE         reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    STRUCT          reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    IF              reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    WHILE           reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    FOR             reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    CONTINUE        reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    BREAK           reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    FUNCTION        reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    PARSE           reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    TRUNC           reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    STRINGFUNC      reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    RETURN          reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    CORIZQ          reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    COMA            reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 17 (llamadaExp -> ID PARIZQ PARDER .)


state 90

    (59) acceso -> ID PUNTO ID .
    (50) arreglo -> ID . listaIndices
    (51) listaIndices -> . listaIndices indice
    (52) listaIndices -> . indice
    (53) indice -> . CORIZQ expresion CORDER

  ! shift/reduce conflict for CORIZQ resolved as shift
    IGUAL           reduce using rule 59 (acceso -> ID PUNTO ID .)
    PUNTO           reduce using rule 59 (acceso -> ID PUNTO ID .)
    MAS             reduce using rule 59 (acceso -> ID PUNTO ID .)
    MENOS           reduce using rule 59 (acceso -> ID PUNTO ID .)
    POR             reduce using rule 59 (acceso -> ID PUNTO ID .)
    DIVIDIDO        reduce using rule 59 (acceso -> ID PUNTO ID .)
    POTENCIA        reduce using rule 59 (acceso -> ID PUNTO ID .)
    MODULO          reduce using rule 59 (acceso -> ID PUNTO ID .)
    MAYOR           reduce using rule 59 (acceso -> ID PUNTO ID .)
    MENOR           reduce using rule 59 (acceso -> ID PUNTO ID .)
    MAYIGUAL        reduce using rule 59 (acceso -> ID PUNTO ID .)
    MENIGUAL        reduce using rule 59 (acceso -> ID PUNTO ID .)
    IGUALDAD        reduce using rule 59 (acceso -> ID PUNTO ID .)
    DISTINTO        reduce using rule 59 (acceso -> ID PUNTO ID .)
    AND             reduce using rule 59 (acceso -> ID PUNTO ID .)
    OR              reduce using rule 59 (acceso -> ID PUNTO ID .)
    DOSPUNTOS       reduce using rule 59 (acceso -> ID PUNTO ID .)
    PRINT           reduce using rule 59 (acceso -> ID PUNTO ID .)
    PRINTLN         reduce using rule 59 (acceso -> ID PUNTO ID .)
    ID              reduce using rule 59 (acceso -> ID PUNTO ID .)
    MUTABLE         reduce using rule 59 (acceso -> ID PUNTO ID .)
    STRUCT          reduce using rule 59 (acceso -> ID PUNTO ID .)
    IF              reduce using rule 59 (acceso -> ID PUNTO ID .)
    WHILE           reduce using rule 59 (acceso -> ID PUNTO ID .)
    FOR             reduce using rule 59 (acceso -> ID PUNTO ID .)
    CONTINUE        reduce using rule 59 (acceso -> ID PUNTO ID .)
    BREAK           reduce using rule 59 (acceso -> ID PUNTO ID .)
    FUNCTION        reduce using rule 59 (acceso -> ID PUNTO ID .)
    PARSE           reduce using rule 59 (acceso -> ID PUNTO ID .)
    TRUNC           reduce using rule 59 (acceso -> ID PUNTO ID .)
    STRINGFUNC      reduce using rule 59 (acceso -> ID PUNTO ID .)
    RETURN          reduce using rule 59 (acceso -> ID PUNTO ID .)
    PTCOMA          reduce using rule 59 (acceso -> ID PUNTO ID .)
    CORDER          reduce using rule 59 (acceso -> ID PUNTO ID .)
    COMA            reduce using rule 59 (acceso -> ID PUNTO ID .)
    PARDER          reduce using rule 59 (acceso -> ID PUNTO ID .)
    CORIZQ          shift and go to state 54

  ! CORIZQ          [ reduce using rule 59 (acceso -> ID PUNTO ID .) ]

    listaIndices                   shift and go to state 52
    indice                         shift and go to state 53

state 91

    (62) acceso -> ID PUNTO arreglo .

    IGUAL           reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    PUNTO           reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    MAS             reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    MENOS           reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    POR             reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    DIVIDIDO        reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    POTENCIA        reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    MODULO          reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    MAYOR           reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    MENOR           reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    MAYIGUAL        reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    MENIGUAL        reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    IGUALDAD        reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    DISTINTO        reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    AND             reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    OR              reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    DOSPUNTOS       reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    PRINT           reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    PRINTLN         reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    ID              reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    MUTABLE         reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    STRUCT          reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    IF              reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    WHILE           reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    FOR             reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    CONTINUE        reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    BREAK           reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    FUNCTION        reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    PARSE           reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    TRUNC           reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    STRINGFUNC      reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    RETURN          reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    CORIZQ          reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    PTCOMA          reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    CORDER          reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    COMA            reduce using rule 62 (acceso -> ID PUNTO arreglo .)
    PARDER          reduce using rule 62 (acceso -> ID PUNTO arreglo .)


state 92

    (51) listaIndices -> listaIndices indice .

    CORIZQ          reduce using rule 51 (listaIndices -> listaIndices indice .)
    PUNTO           reduce using rule 51 (listaIndices -> listaIndices indice .)
    IGUAL           reduce using rule 51 (listaIndices -> listaIndices indice .)
    MAS             reduce using rule 51 (listaIndices -> listaIndices indice .)
    MENOS           reduce using rule 51 (listaIndices -> listaIndices indice .)
    POR             reduce using rule 51 (listaIndices -> listaIndices indice .)
    DIVIDIDO        reduce using rule 51 (listaIndices -> listaIndices indice .)
    POTENCIA        reduce using rule 51 (listaIndices -> listaIndices indice .)
    MODULO          reduce using rule 51 (listaIndices -> listaIndices indice .)
    MAYOR           reduce using rule 51 (listaIndices -> listaIndices indice .)
    MENOR           reduce using rule 51 (listaIndices -> listaIndices indice .)
    MAYIGUAL        reduce using rule 51 (listaIndices -> listaIndices indice .)
    MENIGUAL        reduce using rule 51 (listaIndices -> listaIndices indice .)
    IGUALDAD        reduce using rule 51 (listaIndices -> listaIndices indice .)
    DISTINTO        reduce using rule 51 (listaIndices -> listaIndices indice .)
    AND             reduce using rule 51 (listaIndices -> listaIndices indice .)
    OR              reduce using rule 51 (listaIndices -> listaIndices indice .)
    DOSPUNTOS       reduce using rule 51 (listaIndices -> listaIndices indice .)
    PRINT           reduce using rule 51 (listaIndices -> listaIndices indice .)
    PRINTLN         reduce using rule 51 (listaIndices -> listaIndices indice .)
    ID              reduce using rule 51 (listaIndices -> listaIndices indice .)
    MUTABLE         reduce using rule 51 (listaIndices -> listaIndices indice .)
    STRUCT          reduce using rule 51 (listaIndices -> listaIndices indice .)
    IF              reduce using rule 51 (listaIndices -> listaIndices indice .)
    WHILE           reduce using rule 51 (listaIndices -> listaIndices indice .)
    FOR             reduce using rule 51 (listaIndices -> listaIndices indice .)
    CONTINUE        reduce using rule 51 (listaIndices -> listaIndices indice .)
    BREAK           reduce using rule 51 (listaIndices -> listaIndices indice .)
    FUNCTION        reduce using rule 51 (listaIndices -> listaIndices indice .)
    PARSE           reduce using rule 51 (listaIndices -> listaIndices indice .)
    TRUNC           reduce using rule 51 (listaIndices -> listaIndices indice .)
    STRINGFUNC      reduce using rule 51 (listaIndices -> listaIndices indice .)
    RETURN          reduce using rule 51 (listaIndices -> listaIndices indice .)
    PTCOMA          reduce using rule 51 (listaIndices -> listaIndices indice .)
    CORDER          reduce using rule 51 (listaIndices -> listaIndices indice .)
    COMA            reduce using rule 51 (listaIndices -> listaIndices indice .)
    PARDER          reduce using rule 51 (listaIndices -> listaIndices indice .)


state 93

    (53) indice -> CORIZQ expresion . CORDER
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    CORDER          shift and go to state 143
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107
    MAYOR           shift and go to state 108
    MENOR           shift and go to state 109
    MAYIGUAL        shift and go to state 110
    MENIGUAL        shift and go to state 111
    IGUALDAD        shift and go to state 112
    DISTINTO        shift and go to state 113
    AND             shift and go to state 114
    OR              shift and go to state 115
    DOSPUNTOS       shift and go to state 116


state 94

    (34) accesoAsignacion -> acceso IGUAL expresion . DOSPUNTOS DOSPUNTOS tipo
    (35) accesoAsignacion -> acceso IGUAL expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    DOSPUNTOS       shift and go to state 144
    PTCOMA          reduce using rule 35 (accesoAsignacion -> acceso IGUAL expresion .)
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107
    MAYOR           shift and go to state 108
    MENOR           shift and go to state 109
    MAYIGUAL        shift and go to state 110
    MENIGUAL        shift and go to state 111
    IGUALDAD        shift and go to state 112
    DISTINTO        shift and go to state 113
    AND             shift and go to state 114
    OR              shift and go to state 115


state 95

    (58) acceso -> acceso PUNTO acceso .
    (58) acceso -> acceso . PUNTO acceso

  ! shift/reduce conflict for PUNTO resolved as shift
    IGUAL           reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    MAS             reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    MENOS           reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    POR             reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    DIVIDIDO        reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    POTENCIA        reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    MODULO          reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    MAYOR           reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    MENOR           reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    MAYIGUAL        reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    MENIGUAL        reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    IGUALDAD        reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    DISTINTO        reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    AND             reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    OR              reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    DOSPUNTOS       reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    PRINT           reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    PRINTLN         reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    ID              reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    MUTABLE         reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    STRUCT          reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    IF              reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    WHILE           reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    FOR             reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    CONTINUE        reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    BREAK           reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    FUNCTION        reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    PARSE           reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    TRUNC           reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    STRINGFUNC      reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    RETURN          reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    CORIZQ          reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    PTCOMA          reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    CORDER          reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    COMA            reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    PARDER          reduce using rule 58 (acceso -> acceso PUNTO acceso .)
    PUNTO           shift and go to state 56

  ! PUNTO           [ reduce using rule 58 (acceso -> acceso PUNTO acceso .) ]


state 96

    (59) acceso -> ID . PUNTO ID
    (62) acceso -> ID . PUNTO arreglo
    (63) acceso -> ID .
    (50) arreglo -> ID . listaIndices
    (51) listaIndices -> . listaIndices indice
    (52) listaIndices -> . indice
    (53) indice -> . CORIZQ expresion CORDER

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
    PUNTO           shift and go to state 51
    IGUAL           reduce using rule 63 (acceso -> ID .)
    MAS             reduce using rule 63 (acceso -> ID .)
    MENOS           reduce using rule 63 (acceso -> ID .)
    POR             reduce using rule 63 (acceso -> ID .)
    DIVIDIDO        reduce using rule 63 (acceso -> ID .)
    POTENCIA        reduce using rule 63 (acceso -> ID .)
    MODULO          reduce using rule 63 (acceso -> ID .)
    MAYOR           reduce using rule 63 (acceso -> ID .)
    MENOR           reduce using rule 63 (acceso -> ID .)
    MAYIGUAL        reduce using rule 63 (acceso -> ID .)
    MENIGUAL        reduce using rule 63 (acceso -> ID .)
    IGUALDAD        reduce using rule 63 (acceso -> ID .)
    DISTINTO        reduce using rule 63 (acceso -> ID .)
    AND             reduce using rule 63 (acceso -> ID .)
    OR              reduce using rule 63 (acceso -> ID .)
    DOSPUNTOS       reduce using rule 63 (acceso -> ID .)
    PRINT           reduce using rule 63 (acceso -> ID .)
    PRINTLN         reduce using rule 63 (acceso -> ID .)
    ID              reduce using rule 63 (acceso -> ID .)
    MUTABLE         reduce using rule 63 (acceso -> ID .)
    STRUCT          reduce using rule 63 (acceso -> ID .)
    IF              reduce using rule 63 (acceso -> ID .)
    WHILE           reduce using rule 63 (acceso -> ID .)
    FOR             reduce using rule 63 (acceso -> ID .)
    CONTINUE        reduce using rule 63 (acceso -> ID .)
    BREAK           reduce using rule 63 (acceso -> ID .)
    FUNCTION        reduce using rule 63 (acceso -> ID .)
    PARSE           reduce using rule 63 (acceso -> ID .)
    TRUNC           reduce using rule 63 (acceso -> ID .)
    STRINGFUNC      reduce using rule 63 (acceso -> ID .)
    RETURN          reduce using rule 63 (acceso -> ID .)
    PTCOMA          reduce using rule 63 (acceso -> ID .)
    CORDER          reduce using rule 63 (acceso -> ID .)
    COMA            reduce using rule 63 (acceso -> ID .)
    PARDER          reduce using rule 63 (acceso -> ID .)
    CORIZQ          shift and go to state 54

  ! PUNTO           [ reduce using rule 63 (acceso -> ID .) ]
  ! CORIZQ          [ reduce using rule 63 (acceso -> ID .) ]

    listaIndices                   shift and go to state 52
    indice                         shift and go to state 53

state 97

    (43) structs -> MUTABLE STRUCT ID . atributos END
    (45) atributos -> . atributos atributo
    (46) atributos -> . atributo
    (47) atributo -> . ID DOSPUNTOS DOSPUNTOS tipo PTCOMA
    (48) atributo -> . ID PTCOMA

    ID              shift and go to state 98

    atributos                      shift and go to state 145
    atributo                       shift and go to state 100

state 98

    (47) atributo -> ID . DOSPUNTOS DOSPUNTOS tipo PTCOMA
    (48) atributo -> ID . PTCOMA

    DOSPUNTOS       shift and go to state 146
    PTCOMA          shift and go to state 147


state 99

    (44) structs -> STRUCT ID atributos . END
    (45) atributos -> atributos . atributo
    (47) atributo -> . ID DOSPUNTOS DOSPUNTOS tipo PTCOMA
    (48) atributo -> . ID PTCOMA

    END             shift and go to state 148
    ID              shift and go to state 98

    atributo                       shift and go to state 149

state 100

    (46) atributos -> atributo .

    END             reduce using rule 46 (atributos -> atributo .)
    ID              reduce using rule 46 (atributos -> atributo .)


state 101

    (66) ifInst -> IF expresion bloque . END
    (67) ifInst -> IF expresion bloque . ELSE bloque END
    (68) ifInst -> IF expresion bloque . elseIfInst END
    (69) elseIfInst -> . ELSEIF expresion bloque
    (70) elseIfInst -> . ELSEIF expresion bloque ELSE bloque
    (71) elseIfInst -> . ELSEIF expresion bloque elseIfInst

    END             shift and go to state 150
    ELSE            shift and go to state 151
    ELSEIF          shift and go to state 153

    elseIfInst                     shift and go to state 152

state 102

    (76) expresion -> expresion MAS . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 154
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 103

    (77) expresion -> expresion MENOS . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 155
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 104

    (78) expresion -> expresion POR . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 156
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 105

    (79) expresion -> expresion DIVIDIDO . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 157
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 106

    (80) expresion -> expresion POTENCIA . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 158
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 107

    (81) expresion -> expresion MODULO . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 159
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 108

    (82) expresion -> expresion MAYOR . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 160
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 109

    (83) expresion -> expresion MENOR . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 161
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 110

    (84) expresion -> expresion MAYIGUAL . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 162
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 111

    (85) expresion -> expresion MENIGUAL . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 163
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 112

    (86) expresion -> expresion IGUALDAD . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 164
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 113

    (87) expresion -> expresion DISTINTO . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 165
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 114

    (88) expresion -> expresion AND . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 166
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 115

    (89) expresion -> expresion OR . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 167
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 116

    (54) rango -> expresion DOSPUNTOS . expresion
    (56) rango -> expresion DOSPUNTOS . END
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    END             shift and go to state 169
    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 168
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 117

    (65) bloque -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . printInst PTCOMA
    (5) instruccion -> . asignacion PTCOMA
    (6) instruccion -> . accesoAsignacion PTCOMA
    (7) instruccion -> . structs PTCOMA
    (8) instruccion -> . ifInst PTCOMA
    (9) instruccion -> . whileInst PTCOMA
    (10) instruccion -> . forInst PTCOMA
    (11) instruccion -> . continueInst PTCOMA
    (12) instruccion -> . breakInst PTCOMA
    (13) instruccion -> . funcionDecl PTCOMA
    (14) instruccion -> . llamadaExp PTCOMA
    (15) instruccion -> . returnInst PTCOMA
    (30) printInst -> . PRINT PARIZQ paramExp PARDER
    (31) printInst -> . PRINTLN PARIZQ paramExp PARDER
    (32) asignacion -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (33) asignacion -> . ID IGUAL expresion
    (34) accesoAsignacion -> . acceso IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (35) accesoAsignacion -> . acceso IGUAL expresion
    (43) structs -> . MUTABLE STRUCT ID atributos END
    (44) structs -> . STRUCT ID atributos END
    (66) ifInst -> . IF expresion bloque END
    (67) ifInst -> . IF expresion bloque ELSE bloque END
    (68) ifInst -> . IF expresion bloque elseIfInst END
    (72) whileInst -> . WHILE expresion bloque END
    (73) forInst -> . FOR ID IN expresion bloque END
    (74) continueInst -> . CONTINUE
    (75) breakInst -> . BREAK
    (23) funcionDecl -> . FUNCTION ID PARIZQ paramsDecl PARDER bloque END
    (24) funcionDecl -> . FUNCTION ID PARIZQ PARDER bloque END
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (29) returnInst -> . RETURN expresion
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    END             reduce using rule 65 (bloque -> instrucciones .)
    ELSE            reduce using rule 65 (bloque -> instrucciones .)
    ELSEIF          reduce using rule 65 (bloque -> instrucciones .)
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 18
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    CONTINUE        shift and go to state 25
    BREAK           shift and go to state 26
    FUNCTION        shift and go to state 27
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    RETURN          shift and go to state 31
    CORIZQ          shift and go to state 33

    instruccion                    shift and go to state 34
    printInst                      shift and go to state 4
    asignacion                     shift and go to state 5
    accesoAsignacion               shift and go to state 6
    structs                        shift and go to state 7
    ifInst                         shift and go to state 8
    whileInst                      shift and go to state 9
    forInst                        shift and go to state 10
    continueInst                   shift and go to state 11
    breakInst                      shift and go to state 12
    funcionDecl                    shift and go to state 13
    llamadaExp                     shift and go to state 14
    returnInst                     shift and go to state 15
    acceso                         shift and go to state 19
    arreglo                        shift and go to state 32

state 118

    (90) expresion -> MENOS expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    MAS             reduce using rule 90 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 90 (expresion -> MENOS expresion .)
    POR             reduce using rule 90 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 90 (expresion -> MENOS expresion .)
    POTENCIA        reduce using rule 90 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 90 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 90 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 90 (expresion -> MENOS expresion .)
    MAYIGUAL        reduce using rule 90 (expresion -> MENOS expresion .)
    MENIGUAL        reduce using rule 90 (expresion -> MENOS expresion .)
    IGUALDAD        reduce using rule 90 (expresion -> MENOS expresion .)
    DISTINTO        reduce using rule 90 (expresion -> MENOS expresion .)
    AND             reduce using rule 90 (expresion -> MENOS expresion .)
    OR              reduce using rule 90 (expresion -> MENOS expresion .)
    DOSPUNTOS       reduce using rule 90 (expresion -> MENOS expresion .)
    PRINT           reduce using rule 90 (expresion -> MENOS expresion .)
    PRINTLN         reduce using rule 90 (expresion -> MENOS expresion .)
    ID              reduce using rule 90 (expresion -> MENOS expresion .)
    MUTABLE         reduce using rule 90 (expresion -> MENOS expresion .)
    STRUCT          reduce using rule 90 (expresion -> MENOS expresion .)
    IF              reduce using rule 90 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 90 (expresion -> MENOS expresion .)
    FOR             reduce using rule 90 (expresion -> MENOS expresion .)
    CONTINUE        reduce using rule 90 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 90 (expresion -> MENOS expresion .)
    FUNCTION        reduce using rule 90 (expresion -> MENOS expresion .)
    PARSE           reduce using rule 90 (expresion -> MENOS expresion .)
    TRUNC           reduce using rule 90 (expresion -> MENOS expresion .)
    STRINGFUNC      reduce using rule 90 (expresion -> MENOS expresion .)
    RETURN          reduce using rule 90 (expresion -> MENOS expresion .)
    CORIZQ          reduce using rule 90 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 90 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 90 (expresion -> MENOS expresion .)
    COMA            reduce using rule 90 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 90 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 102 ]
  ! MENOS           [ shift and go to state 103 ]
  ! POR             [ shift and go to state 104 ]
  ! DIVIDIDO        [ shift and go to state 105 ]
  ! POTENCIA        [ shift and go to state 106 ]
  ! MODULO          [ shift and go to state 107 ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MENOR           [ shift and go to state 109 ]
  ! MAYIGUAL        [ shift and go to state 110 ]
  ! MENIGUAL        [ shift and go to state 111 ]
  ! IGUALDAD        [ shift and go to state 112 ]
  ! DISTINTO        [ shift and go to state 113 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 115 ]
  ! DOSPUNTOS       [ shift and go to state 116 ]


state 119

    (91) expresion -> NOT expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    MAS             reduce using rule 91 (expresion -> NOT expresion .)
    MENOS           reduce using rule 91 (expresion -> NOT expresion .)
    POR             reduce using rule 91 (expresion -> NOT expresion .)
    DIVIDIDO        reduce using rule 91 (expresion -> NOT expresion .)
    POTENCIA        reduce using rule 91 (expresion -> NOT expresion .)
    MODULO          reduce using rule 91 (expresion -> NOT expresion .)
    MAYOR           reduce using rule 91 (expresion -> NOT expresion .)
    MENOR           reduce using rule 91 (expresion -> NOT expresion .)
    MAYIGUAL        reduce using rule 91 (expresion -> NOT expresion .)
    MENIGUAL        reduce using rule 91 (expresion -> NOT expresion .)
    IGUALDAD        reduce using rule 91 (expresion -> NOT expresion .)
    DISTINTO        reduce using rule 91 (expresion -> NOT expresion .)
    AND             reduce using rule 91 (expresion -> NOT expresion .)
    OR              reduce using rule 91 (expresion -> NOT expresion .)
    DOSPUNTOS       reduce using rule 91 (expresion -> NOT expresion .)
    PRINT           reduce using rule 91 (expresion -> NOT expresion .)
    PRINTLN         reduce using rule 91 (expresion -> NOT expresion .)
    ID              reduce using rule 91 (expresion -> NOT expresion .)
    MUTABLE         reduce using rule 91 (expresion -> NOT expresion .)
    STRUCT          reduce using rule 91 (expresion -> NOT expresion .)
    IF              reduce using rule 91 (expresion -> NOT expresion .)
    WHILE           reduce using rule 91 (expresion -> NOT expresion .)
    FOR             reduce using rule 91 (expresion -> NOT expresion .)
    CONTINUE        reduce using rule 91 (expresion -> NOT expresion .)
    BREAK           reduce using rule 91 (expresion -> NOT expresion .)
    FUNCTION        reduce using rule 91 (expresion -> NOT expresion .)
    PARSE           reduce using rule 91 (expresion -> NOT expresion .)
    TRUNC           reduce using rule 91 (expresion -> NOT expresion .)
    STRINGFUNC      reduce using rule 91 (expresion -> NOT expresion .)
    RETURN          reduce using rule 91 (expresion -> NOT expresion .)
    CORIZQ          reduce using rule 91 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 91 (expresion -> NOT expresion .)
    CORDER          reduce using rule 91 (expresion -> NOT expresion .)
    COMA            reduce using rule 91 (expresion -> NOT expresion .)
    PARDER          reduce using rule 91 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 102 ]
  ! MENOS           [ shift and go to state 103 ]
  ! POR             [ shift and go to state 104 ]
  ! DIVIDIDO        [ shift and go to state 105 ]
  ! POTENCIA        [ shift and go to state 106 ]
  ! MODULO          [ shift and go to state 107 ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MENOR           [ shift and go to state 109 ]
  ! MAYIGUAL        [ shift and go to state 110 ]
  ! MENIGUAL        [ shift and go to state 111 ]
  ! IGUALDAD        [ shift and go to state 112 ]
  ! DISTINTO        [ shift and go to state 113 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 115 ]
  ! DOSPUNTOS       [ shift and go to state 116 ]


state 120

    (92) expresion -> PARIZQ expresion . PARDER
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    PARDER          shift and go to state 170
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107
    MAYOR           shift and go to state 108
    MENOR           shift and go to state 109
    MAYIGUAL        shift and go to state 110
    MENIGUAL        shift and go to state 111
    IGUALDAD        shift and go to state 112
    DISTINTO        shift and go to state 113
    AND             shift and go to state 114
    OR              shift and go to state 115
    DOSPUNTOS       shift and go to state 116


state 121

    (55) rango -> BEGIN DOSPUNTOS . expresion
    (57) rango -> BEGIN DOSPUNTOS . END
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    END             shift and go to state 172
    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 171
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 122

    (72) whileInst -> WHILE expresion bloque . END

    END             shift and go to state 173


state 123

    (73) forInst -> FOR ID IN . expresion bloque END
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 174
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 124

    (23) funcionDecl -> FUNCTION ID PARIZQ . paramsDecl PARDER bloque END
    (24) funcionDecl -> FUNCTION ID PARIZQ . PARDER bloque END
    (25) paramsDecl -> . paramsDecl COMA paramDl
    (26) paramsDecl -> . paramDl
    (27) paramDl -> . ID DOSPUNTOS DOSPUNTOS tipo
    (28) paramDl -> . ID

    PARDER          shift and go to state 177
    ID              shift and go to state 175

    paramsDecl                     shift and go to state 176
    paramDl                        shift and go to state 178

state 125

    (18) llamadaExp -> PARSE PARIZQ tipo . COMA expresion PARDER

    COMA            shift and go to state 179


state 126

    (36) tipo -> TINT64 .

    COMA            reduce using rule 36 (tipo -> TINT64 .)
    PTCOMA          reduce using rule 36 (tipo -> TINT64 .)
    PARDER          reduce using rule 36 (tipo -> TINT64 .)


state 127

    (37) tipo -> TFLOAT64 .

    COMA            reduce using rule 37 (tipo -> TFLOAT64 .)
    PTCOMA          reduce using rule 37 (tipo -> TFLOAT64 .)
    PARDER          reduce using rule 37 (tipo -> TFLOAT64 .)


state 128

    (38) tipo -> TSTRING .

    COMA            reduce using rule 38 (tipo -> TSTRING .)
    PTCOMA          reduce using rule 38 (tipo -> TSTRING .)
    PARDER          reduce using rule 38 (tipo -> TSTRING .)


state 129

    (39) tipo -> TBOOL .

    COMA            reduce using rule 39 (tipo -> TBOOL .)
    PTCOMA          reduce using rule 39 (tipo -> TBOOL .)
    PARDER          reduce using rule 39 (tipo -> TBOOL .)


state 130

    (40) tipo -> TCHAR .

    COMA            reduce using rule 40 (tipo -> TCHAR .)
    PTCOMA          reduce using rule 40 (tipo -> TCHAR .)
    PARDER          reduce using rule 40 (tipo -> TCHAR .)


state 131

    (41) tipo -> TNULO .

    COMA            reduce using rule 41 (tipo -> TNULO .)
    PTCOMA          reduce using rule 41 (tipo -> TNULO .)
    PARDER          reduce using rule 41 (tipo -> TNULO .)


state 132

    (42) tipo -> ID .

    COMA            reduce using rule 42 (tipo -> ID .)
    PTCOMA          reduce using rule 42 (tipo -> ID .)
    PARDER          reduce using rule 42 (tipo -> ID .)


state 133

    (19) llamadaExp -> TRUNC PARIZQ tipo . COMA expresion PARDER

    COMA            shift and go to state 180


state 134

    (20) llamadaExp -> STRINGFUNC PARIZQ expresion . PARDER
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    PARDER          shift and go to state 181
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107
    MAYOR           shift and go to state 108
    MENOR           shift and go to state 109
    MAYIGUAL        shift and go to state 110
    MENIGUAL        shift and go to state 111
    IGUALDAD        shift and go to state 112
    DISTINTO        shift and go to state 113
    AND             shift and go to state 114
    OR              shift and go to state 115
    DOSPUNTOS       shift and go to state 116


state 135

    (60) acceso -> arreglo PUNTO arreglo .

    IGUAL           reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    PUNTO           reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    MAS             reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    MENOS           reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    POR             reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    DIVIDIDO        reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    POTENCIA        reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    MODULO          reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    MAYOR           reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    MENOR           reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    MAYIGUAL        reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    MENIGUAL        reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    IGUALDAD        reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    DISTINTO        reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    AND             reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    OR              reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    DOSPUNTOS       reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    PRINT           reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    PRINTLN         reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    ID              reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    MUTABLE         reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    STRUCT          reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    IF              reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    WHILE           reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    FOR             reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    CONTINUE        reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    BREAK           reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    FUNCTION        reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    PARSE           reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    TRUNC           reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    STRINGFUNC      reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    RETURN          reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    CORIZQ          reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    PTCOMA          reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    CORDER          reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    COMA            reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)
    PARDER          reduce using rule 60 (acceso -> arreglo PUNTO arreglo .)


state 136

    (61) acceso -> arreglo PUNTO ID .
    (50) arreglo -> ID . listaIndices
    (51) listaIndices -> . listaIndices indice
    (52) listaIndices -> . indice
    (53) indice -> . CORIZQ expresion CORDER

  ! shift/reduce conflict for CORIZQ resolved as shift
    IGUAL           reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    PUNTO           reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    MAS             reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    MENOS           reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    POR             reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    DIVIDIDO        reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    POTENCIA        reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    MODULO          reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    MAYOR           reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    MENOR           reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    MAYIGUAL        reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    MENIGUAL        reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    IGUALDAD        reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    DISTINTO        reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    AND             reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    OR              reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    DOSPUNTOS       reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    PRINT           reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    PRINTLN         reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    ID              reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    MUTABLE         reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    STRUCT          reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    IF              reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    WHILE           reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    FOR             reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    CONTINUE        reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    BREAK           reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    FUNCTION        reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    PARSE           reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    TRUNC           reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    STRINGFUNC      reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    RETURN          reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    PTCOMA          reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    CORDER          reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    COMA            reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    PARDER          reduce using rule 61 (acceso -> arreglo PUNTO ID .)
    CORIZQ          shift and go to state 54

  ! CORIZQ          [ reduce using rule 61 (acceso -> arreglo PUNTO ID .) ]

    listaIndices                   shift and go to state 52
    indice                         shift and go to state 53

state 137

    (49) arreglo -> CORIZQ paramExp CORDER .

    PUNTO           reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    IGUAL           reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    MAS             reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    MENOS           reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    POR             reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    DIVIDIDO        reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    POTENCIA        reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    MODULO          reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    MAYOR           reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    MENOR           reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    MAYIGUAL        reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    MENIGUAL        reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    IGUALDAD        reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    DISTINTO        reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    AND             reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    OR              reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    DOSPUNTOS       reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    PRINT           reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    PRINTLN         reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    ID              reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    MUTABLE         reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    STRUCT          reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    IF              reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    WHILE           reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    FOR             reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    CONTINUE        reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    BREAK           reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    FUNCTION        reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    PARSE           reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    TRUNC           reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    STRINGFUNC      reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    RETURN          reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    CORIZQ          reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    PTCOMA          reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    CORDER          reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    COMA            reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)
    PARDER          reduce using rule 49 (arreglo -> CORIZQ paramExp CORDER .)


state 138

    (21) paramExp -> paramExp COMA . expresion
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 182
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 139

    (30) printInst -> PRINT PARIZQ paramExp PARDER .

    PTCOMA          reduce using rule 30 (printInst -> PRINT PARIZQ paramExp PARDER .)


state 140

    (31) printInst -> PRINTLN PARIZQ paramExp PARDER .

    PTCOMA          reduce using rule 31 (printInst -> PRINTLN PARIZQ paramExp PARDER .)


state 141

    (32) asignacion -> ID IGUAL expresion DOSPUNTOS . DOSPUNTOS tipo
    (54) rango -> expresion DOSPUNTOS . expresion
    (56) rango -> expresion DOSPUNTOS . END
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    DOSPUNTOS       shift and go to state 183
    END             shift and go to state 169
    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 168
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 142

    (16) llamadaExp -> ID PARIZQ paramExp PARDER .

    PTCOMA          reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    MAS             reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    MENOS           reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    POR             reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    DIVIDIDO        reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    POTENCIA        reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    MODULO          reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    MAYOR           reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    MENOR           reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    MAYIGUAL        reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    MENIGUAL        reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    IGUALDAD        reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    DISTINTO        reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    AND             reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    OR              reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    DOSPUNTOS       reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    PRINT           reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    PRINTLN         reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    ID              reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    MUTABLE         reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    STRUCT          reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    IF              reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    WHILE           reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    FOR             reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    CONTINUE        reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    BREAK           reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    FUNCTION        reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    PARSE           reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    TRUNC           reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    STRINGFUNC      reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    RETURN          reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    CORIZQ          reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    CORDER          reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    COMA            reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)
    PARDER          reduce using rule 16 (llamadaExp -> ID PARIZQ paramExp PARDER .)


state 143

    (53) indice -> CORIZQ expresion CORDER .

    CORIZQ          reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    PUNTO           reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    IGUAL           reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    POR             reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    DIVIDIDO        reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    POTENCIA        reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    MODULO          reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    MAYOR           reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    MENOR           reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    MAYIGUAL        reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    MENIGUAL        reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    IGUALDAD        reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    DISTINTO        reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    AND             reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    OR              reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    DOSPUNTOS       reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    PRINT           reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    PRINTLN         reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    ID              reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    MUTABLE         reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    STRUCT          reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    IF              reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    WHILE           reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    FOR             reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    CONTINUE        reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    BREAK           reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    FUNCTION        reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    PARSE           reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    TRUNC           reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    STRINGFUNC      reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    RETURN          reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    PTCOMA          reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 53 (indice -> CORIZQ expresion CORDER .)
    PARDER          reduce using rule 53 (indice -> CORIZQ expresion CORDER .)


state 144

    (34) accesoAsignacion -> acceso IGUAL expresion DOSPUNTOS . DOSPUNTOS tipo
    (54) rango -> expresion DOSPUNTOS . expresion
    (56) rango -> expresion DOSPUNTOS . END
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    DOSPUNTOS       shift and go to state 184
    END             shift and go to state 169
    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    acceso                         shift and go to state 71
    expresion                      shift and go to state 168
    rango                          shift and go to state 70
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 145

    (43) structs -> MUTABLE STRUCT ID atributos . END
    (45) atributos -> atributos . atributo
    (47) atributo -> . ID DOSPUNTOS DOSPUNTOS tipo PTCOMA
    (48) atributo -> . ID PTCOMA

    END             shift and go to state 185
    ID              shift and go to state 98

    atributo                       shift and go to state 149

state 146

    (47) atributo -> ID DOSPUNTOS . DOSPUNTOS tipo PTCOMA

    DOSPUNTOS       shift and go to state 186


state 147

    (48) atributo -> ID PTCOMA .

    END             reduce using rule 48 (atributo -> ID PTCOMA .)
    ID              reduce using rule 48 (atributo -> ID PTCOMA .)


state 148

    (44) structs -> STRUCT ID atributos END .

    PTCOMA          reduce using rule 44 (structs -> STRUCT ID atributos END .)


state 149

    (45) atributos -> atributos atributo .

    END             reduce using rule 45 (atributos -> atributos atributo .)
    ID              reduce using rule 45 (atributos -> atributos atributo .)


state 150

    (66) ifInst -> IF expresion bloque END .

    PTCOMA          reduce using rule 66 (ifInst -> IF expresion bloque END .)


state 151

    (67) ifInst -> IF expresion bloque ELSE . bloque END
    (65) bloque -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . printInst PTCOMA
    (5) instruccion -> . asignacion PTCOMA
    (6) instruccion -> . accesoAsignacion PTCOMA
    (7) instruccion -> . structs PTCOMA
    (8) instruccion -> . ifInst PTCOMA
    (9) instruccion -> . whileInst PTCOMA
    (10) instruccion -> . forInst PTCOMA
    (11) instruccion -> . continueInst PTCOMA
    (12) instruccion -> . breakInst PTCOMA
    (13) instruccion -> . funcionDecl PTCOMA
    (14) instruccion -> . llamadaExp PTCOMA
    (15) instruccion -> . returnInst PTCOMA
    (30) printInst -> . PRINT PARIZQ paramExp PARDER
    (31) printInst -> . PRINTLN PARIZQ paramExp PARDER
    (32) asignacion -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (33) asignacion -> . ID IGUAL expresion
    (34) accesoAsignacion -> . acceso IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (35) accesoAsignacion -> . acceso IGUAL expresion
    (43) structs -> . MUTABLE STRUCT ID atributos END
    (44) structs -> . STRUCT ID atributos END
    (66) ifInst -> . IF expresion bloque END
    (67) ifInst -> . IF expresion bloque ELSE bloque END
    (68) ifInst -> . IF expresion bloque elseIfInst END
    (72) whileInst -> . WHILE expresion bloque END
    (73) forInst -> . FOR ID IN expresion bloque END
    (74) continueInst -> . CONTINUE
    (75) breakInst -> . BREAK
    (23) funcionDecl -> . FUNCTION ID PARIZQ paramsDecl PARDER bloque END
    (24) funcionDecl -> . FUNCTION ID PARIZQ PARDER bloque END
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (29) returnInst -> . RETURN expresion
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 18
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    CONTINUE        shift and go to state 25
    BREAK           shift and go to state 26
    FUNCTION        shift and go to state 27
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    RETURN          shift and go to state 31
    CORIZQ          shift and go to state 33

    bloque                         shift and go to state 187
    instrucciones                  shift and go to state 117
    instruccion                    shift and go to state 3
    printInst                      shift and go to state 4
    asignacion                     shift and go to state 5
    accesoAsignacion               shift and go to state 6
    structs                        shift and go to state 7
    ifInst                         shift and go to state 8
    whileInst                      shift and go to state 9
    forInst                        shift and go to state 10
    continueInst                   shift and go to state 11
    breakInst                      shift and go to state 12
    funcionDecl                    shift and go to state 13
    llamadaExp                     shift and go to state 14
    returnInst                     shift and go to state 15
    acceso                         shift and go to state 19
    arreglo                        shift and go to state 32

state 152

    (68) ifInst -> IF expresion bloque elseIfInst . END

    END             shift and go to state 188


state 153

    (69) elseIfInst -> ELSEIF . expresion bloque
    (70) elseIfInst -> ELSEIF . expresion bloque ELSE bloque
    (71) elseIfInst -> ELSEIF . expresion bloque elseIfInst
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 189
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 154

    (76) expresion -> expresion MAS expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    MAS             reduce using rule 76 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 76 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 76 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 76 (expresion -> expresion MAS expresion .)
    MAYIGUAL        reduce using rule 76 (expresion -> expresion MAS expresion .)
    MENIGUAL        reduce using rule 76 (expresion -> expresion MAS expresion .)
    IGUALDAD        reduce using rule 76 (expresion -> expresion MAS expresion .)
    DISTINTO        reduce using rule 76 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 76 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 76 (expresion -> expresion MAS expresion .)
    DOSPUNTOS       reduce using rule 76 (expresion -> expresion MAS expresion .)
    PRINT           reduce using rule 76 (expresion -> expresion MAS expresion .)
    PRINTLN         reduce using rule 76 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 76 (expresion -> expresion MAS expresion .)
    MUTABLE         reduce using rule 76 (expresion -> expresion MAS expresion .)
    STRUCT          reduce using rule 76 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 76 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 76 (expresion -> expresion MAS expresion .)
    FOR             reduce using rule 76 (expresion -> expresion MAS expresion .)
    CONTINUE        reduce using rule 76 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 76 (expresion -> expresion MAS expresion .)
    FUNCTION        reduce using rule 76 (expresion -> expresion MAS expresion .)
    PARSE           reduce using rule 76 (expresion -> expresion MAS expresion .)
    TRUNC           reduce using rule 76 (expresion -> expresion MAS expresion .)
    STRINGFUNC      reduce using rule 76 (expresion -> expresion MAS expresion .)
    RETURN          reduce using rule 76 (expresion -> expresion MAS expresion .)
    CORIZQ          reduce using rule 76 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 76 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 76 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 76 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 76 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107

  ! POR             [ reduce using rule 76 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 76 (expresion -> expresion MAS expresion .) ]
  ! POTENCIA        [ reduce using rule 76 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 76 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 102 ]
  ! MENOS           [ shift and go to state 103 ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MENOR           [ shift and go to state 109 ]
  ! MAYIGUAL        [ shift and go to state 110 ]
  ! MENIGUAL        [ shift and go to state 111 ]
  ! IGUALDAD        [ shift and go to state 112 ]
  ! DISTINTO        [ shift and go to state 113 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 115 ]
  ! DOSPUNTOS       [ shift and go to state 116 ]


state 155

    (77) expresion -> expresion MENOS expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    MAS             reduce using rule 77 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 77 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 77 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 77 (expresion -> expresion MENOS expresion .)
    MAYIGUAL        reduce using rule 77 (expresion -> expresion MENOS expresion .)
    MENIGUAL        reduce using rule 77 (expresion -> expresion MENOS expresion .)
    IGUALDAD        reduce using rule 77 (expresion -> expresion MENOS expresion .)
    DISTINTO        reduce using rule 77 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 77 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 77 (expresion -> expresion MENOS expresion .)
    DOSPUNTOS       reduce using rule 77 (expresion -> expresion MENOS expresion .)
    PRINT           reduce using rule 77 (expresion -> expresion MENOS expresion .)
    PRINTLN         reduce using rule 77 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 77 (expresion -> expresion MENOS expresion .)
    MUTABLE         reduce using rule 77 (expresion -> expresion MENOS expresion .)
    STRUCT          reduce using rule 77 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 77 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 77 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 77 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 77 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 77 (expresion -> expresion MENOS expresion .)
    FUNCTION        reduce using rule 77 (expresion -> expresion MENOS expresion .)
    PARSE           reduce using rule 77 (expresion -> expresion MENOS expresion .)
    TRUNC           reduce using rule 77 (expresion -> expresion MENOS expresion .)
    STRINGFUNC      reduce using rule 77 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 77 (expresion -> expresion MENOS expresion .)
    CORIZQ          reduce using rule 77 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 77 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 77 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 77 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 77 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107

  ! POR             [ reduce using rule 77 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 77 (expresion -> expresion MENOS expresion .) ]
  ! POTENCIA        [ reduce using rule 77 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 77 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 102 ]
  ! MENOS           [ shift and go to state 103 ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MENOR           [ shift and go to state 109 ]
  ! MAYIGUAL        [ shift and go to state 110 ]
  ! MENIGUAL        [ shift and go to state 111 ]
  ! IGUALDAD        [ shift and go to state 112 ]
  ! DISTINTO        [ shift and go to state 113 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 115 ]
  ! DOSPUNTOS       [ shift and go to state 116 ]


state 156

    (78) expresion -> expresion POR expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    MAS             reduce using rule 78 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 78 (expresion -> expresion POR expresion .)
    POR             reduce using rule 78 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 78 (expresion -> expresion POR expresion .)
    MAYOR           reduce using rule 78 (expresion -> expresion POR expresion .)
    MENOR           reduce using rule 78 (expresion -> expresion POR expresion .)
    MAYIGUAL        reduce using rule 78 (expresion -> expresion POR expresion .)
    MENIGUAL        reduce using rule 78 (expresion -> expresion POR expresion .)
    IGUALDAD        reduce using rule 78 (expresion -> expresion POR expresion .)
    DISTINTO        reduce using rule 78 (expresion -> expresion POR expresion .)
    AND             reduce using rule 78 (expresion -> expresion POR expresion .)
    OR              reduce using rule 78 (expresion -> expresion POR expresion .)
    DOSPUNTOS       reduce using rule 78 (expresion -> expresion POR expresion .)
    PRINT           reduce using rule 78 (expresion -> expresion POR expresion .)
    PRINTLN         reduce using rule 78 (expresion -> expresion POR expresion .)
    ID              reduce using rule 78 (expresion -> expresion POR expresion .)
    MUTABLE         reduce using rule 78 (expresion -> expresion POR expresion .)
    STRUCT          reduce using rule 78 (expresion -> expresion POR expresion .)
    IF              reduce using rule 78 (expresion -> expresion POR expresion .)
    WHILE           reduce using rule 78 (expresion -> expresion POR expresion .)
    FOR             reduce using rule 78 (expresion -> expresion POR expresion .)
    CONTINUE        reduce using rule 78 (expresion -> expresion POR expresion .)
    BREAK           reduce using rule 78 (expresion -> expresion POR expresion .)
    FUNCTION        reduce using rule 78 (expresion -> expresion POR expresion .)
    PARSE           reduce using rule 78 (expresion -> expresion POR expresion .)
    TRUNC           reduce using rule 78 (expresion -> expresion POR expresion .)
    STRINGFUNC      reduce using rule 78 (expresion -> expresion POR expresion .)
    RETURN          reduce using rule 78 (expresion -> expresion POR expresion .)
    CORIZQ          reduce using rule 78 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 78 (expresion -> expresion POR expresion .)
    CORDER          reduce using rule 78 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 78 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 78 (expresion -> expresion POR expresion .)
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107

  ! POTENCIA        [ reduce using rule 78 (expresion -> expresion POR expresion .) ]
  ! MODULO          [ reduce using rule 78 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 102 ]
  ! MENOS           [ shift and go to state 103 ]
  ! POR             [ shift and go to state 104 ]
  ! DIVIDIDO        [ shift and go to state 105 ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MENOR           [ shift and go to state 109 ]
  ! MAYIGUAL        [ shift and go to state 110 ]
  ! MENIGUAL        [ shift and go to state 111 ]
  ! IGUALDAD        [ shift and go to state 112 ]
  ! DISTINTO        [ shift and go to state 113 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 115 ]
  ! DOSPUNTOS       [ shift and go to state 116 ]


state 157

    (79) expresion -> expresion DIVIDIDO expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    MAS             reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    MAYOR           reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    MENOR           reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    MAYIGUAL        reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    MENIGUAL        reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    IGUALDAD        reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    DISTINTO        reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    DOSPUNTOS       reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    PRINT           reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    PRINTLN         reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    ID              reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    MUTABLE         reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    STRUCT          reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    IF              reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    WHILE           reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    FOR             reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    CONTINUE        reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    BREAK           reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    FUNCTION        reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    PARSE           reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    TRUNC           reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    STRINGFUNC      reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    RETURN          reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    CORIZQ          reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    CORDER          reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    COMA            reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .)
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107

  ! POTENCIA        [ reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MODULO          [ reduce using rule 79 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MAS             [ shift and go to state 102 ]
  ! MENOS           [ shift and go to state 103 ]
  ! POR             [ shift and go to state 104 ]
  ! DIVIDIDO        [ shift and go to state 105 ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MENOR           [ shift and go to state 109 ]
  ! MAYIGUAL        [ shift and go to state 110 ]
  ! MENIGUAL        [ shift and go to state 111 ]
  ! IGUALDAD        [ shift and go to state 112 ]
  ! DISTINTO        [ shift and go to state 113 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 115 ]
  ! DOSPUNTOS       [ shift and go to state 116 ]


state 158

    (80) expresion -> expresion POTENCIA expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    MAS             reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    MENOS           reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    POR             reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    DIVIDIDO        reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    POTENCIA        reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    MAYOR           reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    MENOR           reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    MAYIGUAL        reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    MENIGUAL        reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    IGUALDAD        reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    DISTINTO        reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    AND             reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    OR              reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    DOSPUNTOS       reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    PRINT           reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    PRINTLN         reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    ID              reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    MUTABLE         reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    STRUCT          reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    IF              reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    WHILE           reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    FOR             reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    CONTINUE        reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    BREAK           reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    FUNCTION        reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    PARSE           reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    TRUNC           reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    STRINGFUNC      reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    RETURN          reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    CORIZQ          reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    PTCOMA          reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    CORDER          reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    COMA            reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    PARDER          reduce using rule 80 (expresion -> expresion POTENCIA expresion .)
    MODULO          shift and go to state 107

  ! MODULO          [ reduce using rule 80 (expresion -> expresion POTENCIA expresion .) ]
  ! MAS             [ shift and go to state 102 ]
  ! MENOS           [ shift and go to state 103 ]
  ! POR             [ shift and go to state 104 ]
  ! DIVIDIDO        [ shift and go to state 105 ]
  ! POTENCIA        [ shift and go to state 106 ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MENOR           [ shift and go to state 109 ]
  ! MAYIGUAL        [ shift and go to state 110 ]
  ! MENIGUAL        [ shift and go to state 111 ]
  ! IGUALDAD        [ shift and go to state 112 ]
  ! DISTINTO        [ shift and go to state 113 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 115 ]
  ! DOSPUNTOS       [ shift and go to state 116 ]


state 159

    (81) expresion -> expresion MODULO expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    MAS             reduce using rule 81 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 81 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 81 (expresion -> expresion MODULO expresion .)
    DIVIDIDO        reduce using rule 81 (expresion -> expresion MODULO expresion .)
    POTENCIA        reduce using rule 81 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 81 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 81 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 81 (expresion -> expresion MODULO expresion .)
    MAYIGUAL        reduce using rule 81 (expresion -> expresion MODULO expresion .)
    MENIGUAL        reduce using rule 81 (expresion -> expresion MODULO expresion .)
    IGUALDAD        reduce using rule 81 (expresion -> expresion MODULO expresion .)
    DISTINTO        reduce using rule 81 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 81 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 81 (expresion -> expresion MODULO expresion .)
    DOSPUNTOS       reduce using rule 81 (expresion -> expresion MODULO expresion .)
    PRINT           reduce using rule 81 (expresion -> expresion MODULO expresion .)
    PRINTLN         reduce using rule 81 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 81 (expresion -> expresion MODULO expresion .)
    MUTABLE         reduce using rule 81 (expresion -> expresion MODULO expresion .)
    STRUCT          reduce using rule 81 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 81 (expresion -> expresion MODULO expresion .)
    WHILE           reduce using rule 81 (expresion -> expresion MODULO expresion .)
    FOR             reduce using rule 81 (expresion -> expresion MODULO expresion .)
    CONTINUE        reduce using rule 81 (expresion -> expresion MODULO expresion .)
    BREAK           reduce using rule 81 (expresion -> expresion MODULO expresion .)
    FUNCTION        reduce using rule 81 (expresion -> expresion MODULO expresion .)
    PARSE           reduce using rule 81 (expresion -> expresion MODULO expresion .)
    TRUNC           reduce using rule 81 (expresion -> expresion MODULO expresion .)
    STRINGFUNC      reduce using rule 81 (expresion -> expresion MODULO expresion .)
    RETURN          reduce using rule 81 (expresion -> expresion MODULO expresion .)
    CORIZQ          reduce using rule 81 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 81 (expresion -> expresion MODULO expresion .)
    CORDER          reduce using rule 81 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 81 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 81 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 102 ]
  ! MENOS           [ shift and go to state 103 ]
  ! POR             [ shift and go to state 104 ]
  ! DIVIDIDO        [ shift and go to state 105 ]
  ! POTENCIA        [ shift and go to state 106 ]
  ! MODULO          [ shift and go to state 107 ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MENOR           [ shift and go to state 109 ]
  ! MAYIGUAL        [ shift and go to state 110 ]
  ! MENIGUAL        [ shift and go to state 111 ]
  ! IGUALDAD        [ shift and go to state 112 ]
  ! DISTINTO        [ shift and go to state 113 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 115 ]
  ! DOSPUNTOS       [ shift and go to state 116 ]


state 160

    (82) expresion -> expresion MAYOR expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    MAYOR           reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    MAYIGUAL        reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    MENIGUAL        reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    IGUALDAD        reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    DISTINTO        reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    DOSPUNTOS       reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    PRINT           reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    PRINTLN         reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    MUTABLE         reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    STRUCT          reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    WHILE           reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    FOR             reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    CONTINUE        reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    BREAK           reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    FUNCTION        reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    PARSE           reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    TRUNC           reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    STRINGFUNC      reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    RETURN          reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    CORIZQ          reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    PTCOMA          reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    CORDER          reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    PARDER          reduce using rule 82 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107

  ! MAS             [ reduce using rule 82 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 82 (expresion -> expresion MAYOR expresion .) ]
  ! POR             [ reduce using rule 82 (expresion -> expresion MAYOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 82 (expresion -> expresion MAYOR expresion .) ]
  ! POTENCIA        [ reduce using rule 82 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 82 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MENOR           [ shift and go to state 109 ]
  ! MAYIGUAL        [ shift and go to state 110 ]
  ! MENIGUAL        [ shift and go to state 111 ]
  ! IGUALDAD        [ shift and go to state 112 ]
  ! DISTINTO        [ shift and go to state 113 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 115 ]
  ! DOSPUNTOS       [ shift and go to state 116 ]


state 161

    (83) expresion -> expresion MENOR expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    MAYOR           reduce using rule 83 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 83 (expresion -> expresion MENOR expresion .)
    MAYIGUAL        reduce using rule 83 (expresion -> expresion MENOR expresion .)
    MENIGUAL        reduce using rule 83 (expresion -> expresion MENOR expresion .)
    IGUALDAD        reduce using rule 83 (expresion -> expresion MENOR expresion .)
    DISTINTO        reduce using rule 83 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 83 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 83 (expresion -> expresion MENOR expresion .)
    DOSPUNTOS       reduce using rule 83 (expresion -> expresion MENOR expresion .)
    PRINT           reduce using rule 83 (expresion -> expresion MENOR expresion .)
    PRINTLN         reduce using rule 83 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 83 (expresion -> expresion MENOR expresion .)
    MUTABLE         reduce using rule 83 (expresion -> expresion MENOR expresion .)
    STRUCT          reduce using rule 83 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 83 (expresion -> expresion MENOR expresion .)
    WHILE           reduce using rule 83 (expresion -> expresion MENOR expresion .)
    FOR             reduce using rule 83 (expresion -> expresion MENOR expresion .)
    CONTINUE        reduce using rule 83 (expresion -> expresion MENOR expresion .)
    BREAK           reduce using rule 83 (expresion -> expresion MENOR expresion .)
    FUNCTION        reduce using rule 83 (expresion -> expresion MENOR expresion .)
    PARSE           reduce using rule 83 (expresion -> expresion MENOR expresion .)
    TRUNC           reduce using rule 83 (expresion -> expresion MENOR expresion .)
    STRINGFUNC      reduce using rule 83 (expresion -> expresion MENOR expresion .)
    RETURN          reduce using rule 83 (expresion -> expresion MENOR expresion .)
    CORIZQ          reduce using rule 83 (expresion -> expresion MENOR expresion .)
    PTCOMA          reduce using rule 83 (expresion -> expresion MENOR expresion .)
    CORDER          reduce using rule 83 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 83 (expresion -> expresion MENOR expresion .)
    PARDER          reduce using rule 83 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107

  ! MAS             [ reduce using rule 83 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 83 (expresion -> expresion MENOR expresion .) ]
  ! POR             [ reduce using rule 83 (expresion -> expresion MENOR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 83 (expresion -> expresion MENOR expresion .) ]
  ! POTENCIA        [ reduce using rule 83 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 83 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MENOR           [ shift and go to state 109 ]
  ! MAYIGUAL        [ shift and go to state 110 ]
  ! MENIGUAL        [ shift and go to state 111 ]
  ! IGUALDAD        [ shift and go to state 112 ]
  ! DISTINTO        [ shift and go to state 113 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 115 ]
  ! DOSPUNTOS       [ shift and go to state 116 ]


state 162

    (84) expresion -> expresion MAYIGUAL expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    MAYOR           reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    MENOR           reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    MAYIGUAL        reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    MENIGUAL        reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    IGUALDAD        reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    DISTINTO        reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    AND             reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    OR              reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    DOSPUNTOS       reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    PRINT           reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    PRINTLN         reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    ID              reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    MUTABLE         reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    STRUCT          reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    IF              reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    WHILE           reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    FOR             reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    CONTINUE        reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    BREAK           reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    FUNCTION        reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    PARSE           reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    TRUNC           reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    STRINGFUNC      reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    RETURN          reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    CORIZQ          reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    PTCOMA          reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    CORDER          reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    COMA            reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    PARDER          reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .)
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107

  ! MAS             [ reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .) ]
  ! POR             [ reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .) ]
  ! DIVIDIDO        [ reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 84 (expresion -> expresion MAYIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MENOR           [ shift and go to state 109 ]
  ! MAYIGUAL        [ shift and go to state 110 ]
  ! MENIGUAL        [ shift and go to state 111 ]
  ! IGUALDAD        [ shift and go to state 112 ]
  ! DISTINTO        [ shift and go to state 113 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 115 ]
  ! DOSPUNTOS       [ shift and go to state 116 ]


state 163

    (85) expresion -> expresion MENIGUAL expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    MAYOR           reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    MENOR           reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    MAYIGUAL        reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    MENIGUAL        reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    IGUALDAD        reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    DISTINTO        reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    AND             reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    OR              reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    DOSPUNTOS       reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    PRINT           reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    PRINTLN         reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    ID              reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    MUTABLE         reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    STRUCT          reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    IF              reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    WHILE           reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    FOR             reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    CONTINUE        reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    BREAK           reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    FUNCTION        reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    PARSE           reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    TRUNC           reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    STRINGFUNC      reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    RETURN          reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    CORIZQ          reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    PTCOMA          reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    CORDER          reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    COMA            reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    PARDER          reduce using rule 85 (expresion -> expresion MENIGUAL expresion .)
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107

  ! MAS             [ reduce using rule 85 (expresion -> expresion MENIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 85 (expresion -> expresion MENIGUAL expresion .) ]
  ! POR             [ reduce using rule 85 (expresion -> expresion MENIGUAL expresion .) ]
  ! DIVIDIDO        [ reduce using rule 85 (expresion -> expresion MENIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 85 (expresion -> expresion MENIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 85 (expresion -> expresion MENIGUAL expresion .) ]
  ! MAYOR           [ shift and go to state 108 ]
  ! MENOR           [ shift and go to state 109 ]
  ! MAYIGUAL        [ shift and go to state 110 ]
  ! MENIGUAL        [ shift and go to state 111 ]
  ! IGUALDAD        [ shift and go to state 112 ]
  ! DISTINTO        [ shift and go to state 113 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 115 ]
  ! DOSPUNTOS       [ shift and go to state 116 ]


state 164

    (86) expresion -> expresion IGUALDAD expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    IGUALDAD        reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    DISTINTO        reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    AND             reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    OR              reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    DOSPUNTOS       reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    PRINT           reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    PRINTLN         reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    ID              reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    MUTABLE         reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    STRUCT          reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    IF              reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    WHILE           reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    FOR             reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    CONTINUE        reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    BREAK           reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    FUNCTION        reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    PARSE           reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    TRUNC           reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    STRINGFUNC      reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    RETURN          reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    CORIZQ          reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    PTCOMA          reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    CORDER          reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    COMA            reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    PARDER          reduce using rule 86 (expresion -> expresion IGUALDAD expresion .)
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107
    MAYOR           shift and go to state 108
    MENOR           shift and go to state 109
    MAYIGUAL        shift and go to state 110
    MENIGUAL        shift and go to state 111

  ! MAS             [ reduce using rule 86 (expresion -> expresion IGUALDAD expresion .) ]
  ! MENOS           [ reduce using rule 86 (expresion -> expresion IGUALDAD expresion .) ]
  ! POR             [ reduce using rule 86 (expresion -> expresion IGUALDAD expresion .) ]
  ! DIVIDIDO        [ reduce using rule 86 (expresion -> expresion IGUALDAD expresion .) ]
  ! POTENCIA        [ reduce using rule 86 (expresion -> expresion IGUALDAD expresion .) ]
  ! MODULO          [ reduce using rule 86 (expresion -> expresion IGUALDAD expresion .) ]
  ! MAYOR           [ reduce using rule 86 (expresion -> expresion IGUALDAD expresion .) ]
  ! MENOR           [ reduce using rule 86 (expresion -> expresion IGUALDAD expresion .) ]
  ! MAYIGUAL        [ reduce using rule 86 (expresion -> expresion IGUALDAD expresion .) ]
  ! MENIGUAL        [ reduce using rule 86 (expresion -> expresion IGUALDAD expresion .) ]
  ! IGUALDAD        [ shift and go to state 112 ]
  ! DISTINTO        [ shift and go to state 113 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 115 ]
  ! DOSPUNTOS       [ shift and go to state 116 ]


state 165

    (87) expresion -> expresion DISTINTO expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    IGUALDAD        reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    DISTINTO        reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    AND             reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    OR              reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    DOSPUNTOS       reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    PRINT           reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    PRINTLN         reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    ID              reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    MUTABLE         reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    STRUCT          reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    IF              reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    WHILE           reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    FOR             reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    CONTINUE        reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    BREAK           reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    FUNCTION        reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    PARSE           reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    TRUNC           reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    STRINGFUNC      reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    RETURN          reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    CORIZQ          reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    PTCOMA          reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    CORDER          reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    COMA            reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    PARDER          reduce using rule 87 (expresion -> expresion DISTINTO expresion .)
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107
    MAYOR           shift and go to state 108
    MENOR           shift and go to state 109
    MAYIGUAL        shift and go to state 110
    MENIGUAL        shift and go to state 111

  ! MAS             [ reduce using rule 87 (expresion -> expresion DISTINTO expresion .) ]
  ! MENOS           [ reduce using rule 87 (expresion -> expresion DISTINTO expresion .) ]
  ! POR             [ reduce using rule 87 (expresion -> expresion DISTINTO expresion .) ]
  ! DIVIDIDO        [ reduce using rule 87 (expresion -> expresion DISTINTO expresion .) ]
  ! POTENCIA        [ reduce using rule 87 (expresion -> expresion DISTINTO expresion .) ]
  ! MODULO          [ reduce using rule 87 (expresion -> expresion DISTINTO expresion .) ]
  ! MAYOR           [ reduce using rule 87 (expresion -> expresion DISTINTO expresion .) ]
  ! MENOR           [ reduce using rule 87 (expresion -> expresion DISTINTO expresion .) ]
  ! MAYIGUAL        [ reduce using rule 87 (expresion -> expresion DISTINTO expresion .) ]
  ! MENIGUAL        [ reduce using rule 87 (expresion -> expresion DISTINTO expresion .) ]
  ! IGUALDAD        [ shift and go to state 112 ]
  ! DISTINTO        [ shift and go to state 113 ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 115 ]
  ! DOSPUNTOS       [ shift and go to state 116 ]


state 166

    (88) expresion -> expresion AND expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    AND             reduce using rule 88 (expresion -> expresion AND expresion .)
    OR              reduce using rule 88 (expresion -> expresion AND expresion .)
    DOSPUNTOS       reduce using rule 88 (expresion -> expresion AND expresion .)
    PRINT           reduce using rule 88 (expresion -> expresion AND expresion .)
    PRINTLN         reduce using rule 88 (expresion -> expresion AND expresion .)
    ID              reduce using rule 88 (expresion -> expresion AND expresion .)
    MUTABLE         reduce using rule 88 (expresion -> expresion AND expresion .)
    STRUCT          reduce using rule 88 (expresion -> expresion AND expresion .)
    IF              reduce using rule 88 (expresion -> expresion AND expresion .)
    WHILE           reduce using rule 88 (expresion -> expresion AND expresion .)
    FOR             reduce using rule 88 (expresion -> expresion AND expresion .)
    CONTINUE        reduce using rule 88 (expresion -> expresion AND expresion .)
    BREAK           reduce using rule 88 (expresion -> expresion AND expresion .)
    FUNCTION        reduce using rule 88 (expresion -> expresion AND expresion .)
    PARSE           reduce using rule 88 (expresion -> expresion AND expresion .)
    TRUNC           reduce using rule 88 (expresion -> expresion AND expresion .)
    STRINGFUNC      reduce using rule 88 (expresion -> expresion AND expresion .)
    RETURN          reduce using rule 88 (expresion -> expresion AND expresion .)
    CORIZQ          reduce using rule 88 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 88 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 88 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 88 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 88 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107
    MAYOR           shift and go to state 108
    MENOR           shift and go to state 109
    MAYIGUAL        shift and go to state 110
    MENIGUAL        shift and go to state 111
    IGUALDAD        shift and go to state 112
    DISTINTO        shift and go to state 113

  ! MAS             [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! POTENCIA        [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! MAYIGUAL        [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! MENIGUAL        [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! IGUALDAD        [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! DISTINTO        [ reduce using rule 88 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 115 ]
  ! DOSPUNTOS       [ shift and go to state 116 ]


state 167

    (89) expresion -> expresion OR expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    OR              reduce using rule 89 (expresion -> expresion OR expresion .)
    DOSPUNTOS       reduce using rule 89 (expresion -> expresion OR expresion .)
    PRINT           reduce using rule 89 (expresion -> expresion OR expresion .)
    PRINTLN         reduce using rule 89 (expresion -> expresion OR expresion .)
    ID              reduce using rule 89 (expresion -> expresion OR expresion .)
    MUTABLE         reduce using rule 89 (expresion -> expresion OR expresion .)
    STRUCT          reduce using rule 89 (expresion -> expresion OR expresion .)
    IF              reduce using rule 89 (expresion -> expresion OR expresion .)
    WHILE           reduce using rule 89 (expresion -> expresion OR expresion .)
    FOR             reduce using rule 89 (expresion -> expresion OR expresion .)
    CONTINUE        reduce using rule 89 (expresion -> expresion OR expresion .)
    BREAK           reduce using rule 89 (expresion -> expresion OR expresion .)
    FUNCTION        reduce using rule 89 (expresion -> expresion OR expresion .)
    PARSE           reduce using rule 89 (expresion -> expresion OR expresion .)
    TRUNC           reduce using rule 89 (expresion -> expresion OR expresion .)
    STRINGFUNC      reduce using rule 89 (expresion -> expresion OR expresion .)
    RETURN          reduce using rule 89 (expresion -> expresion OR expresion .)
    CORIZQ          reduce using rule 89 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 89 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 89 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 89 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 89 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107
    MAYOR           shift and go to state 108
    MENOR           shift and go to state 109
    MAYIGUAL        shift and go to state 110
    MENIGUAL        shift and go to state 111
    IGUALDAD        shift and go to state 112
    DISTINTO        shift and go to state 113
    AND             shift and go to state 114

  ! MAS             [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! POTENCIA        [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! MAYIGUAL        [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! MENIGUAL        [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! IGUALDAD        [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! DISTINTO        [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 89 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 115 ]
  ! DOSPUNTOS       [ shift and go to state 116 ]


state 168

    (54) rango -> expresion DOSPUNTOS expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DISTINTO resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for DOSPUNTOS resolved as shift
    PRINT           reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .)
    PRINTLN         reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .)
    ID              reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .)
    MUTABLE         reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .)
    STRUCT          reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .)
    IF              reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .)
    WHILE           reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .)
    FOR             reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .)
    CONTINUE        reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .)
    BREAK           reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .)
    FUNCTION        reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .)
    PARSE           reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .)
    TRUNC           reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .)
    STRINGFUNC      reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .)
    RETURN          reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .)
    CORIZQ          reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .)
    PTCOMA          reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .)
    CORDER          reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .)
    COMA            reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .)
    PARDER          reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .)
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107
    MAYOR           shift and go to state 108
    MENOR           shift and go to state 109
    MAYIGUAL        shift and go to state 110
    MENIGUAL        shift and go to state 111
    IGUALDAD        shift and go to state 112
    DISTINTO        shift and go to state 113
    AND             shift and go to state 114
    OR              shift and go to state 115
    DOSPUNTOS       shift and go to state 116

  ! MAS             [ reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .) ]
  ! MENOS           [ reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .) ]
  ! POR             [ reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .) ]
  ! POTENCIA        [ reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .) ]
  ! MODULO          [ reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .) ]
  ! MAYOR           [ reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .) ]
  ! MENOR           [ reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .) ]
  ! MAYIGUAL        [ reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .) ]
  ! MENIGUAL        [ reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .) ]
  ! IGUALDAD        [ reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .) ]
  ! DISTINTO        [ reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .) ]
  ! AND             [ reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .) ]
  ! OR              [ reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .) ]
  ! DOSPUNTOS       [ reduce using rule 54 (rango -> expresion DOSPUNTOS expresion .) ]


state 169

    (56) rango -> expresion DOSPUNTOS END .

    MAS             reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    MENOS           reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    POR             reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    DIVIDIDO        reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    POTENCIA        reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    MODULO          reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    MAYOR           reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    MENOR           reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    MAYIGUAL        reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    MENIGUAL        reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    IGUALDAD        reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    DISTINTO        reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    AND             reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    OR              reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    DOSPUNTOS       reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    PRINT           reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    PRINTLN         reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    ID              reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    MUTABLE         reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    STRUCT          reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    IF              reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    WHILE           reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    FOR             reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    CONTINUE        reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    BREAK           reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    FUNCTION        reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    PARSE           reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    TRUNC           reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    STRINGFUNC      reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    RETURN          reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    CORIZQ          reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    PTCOMA          reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    CORDER          reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    COMA            reduce using rule 56 (rango -> expresion DOSPUNTOS END .)
    PARDER          reduce using rule 56 (rango -> expresion DOSPUNTOS END .)


state 170

    (92) expresion -> PARIZQ expresion PARDER .

    MAS             reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    MENOR           reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    MAYIGUAL        reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    MENIGUAL        reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    IGUALDAD        reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    PRINT           reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    ID              reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    IF              reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    WHILE           reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    FOR             reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    BREAK           reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    PARSE           reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    TRUNC           reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    STRINGFUNC      reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    RETURN          reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    CORIZQ          reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 92 (expresion -> PARIZQ expresion PARDER .)


state 171

    (55) rango -> BEGIN DOSPUNTOS expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DISTINTO resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for DOSPUNTOS resolved as shift
    PRINT           reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .)
    PRINTLN         reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .)
    ID              reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .)
    MUTABLE         reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .)
    STRUCT          reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .)
    IF              reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .)
    WHILE           reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .)
    FOR             reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .)
    CONTINUE        reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .)
    BREAK           reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .)
    FUNCTION        reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .)
    PARSE           reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .)
    TRUNC           reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .)
    STRINGFUNC      reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .)
    RETURN          reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .)
    CORIZQ          reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .)
    PTCOMA          reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .)
    CORDER          reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .)
    COMA            reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .)
    PARDER          reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .)
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107
    MAYOR           shift and go to state 108
    MENOR           shift and go to state 109
    MAYIGUAL        shift and go to state 110
    MENIGUAL        shift and go to state 111
    IGUALDAD        shift and go to state 112
    DISTINTO        shift and go to state 113
    AND             shift and go to state 114
    OR              shift and go to state 115
    DOSPUNTOS       shift and go to state 116

  ! MAS             [ reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .) ]
  ! MENOS           [ reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .) ]
  ! POR             [ reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .) ]
  ! POTENCIA        [ reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .) ]
  ! MODULO          [ reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .) ]
  ! MAYOR           [ reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .) ]
  ! MENOR           [ reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .) ]
  ! MAYIGUAL        [ reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .) ]
  ! MENIGUAL        [ reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .) ]
  ! IGUALDAD        [ reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .) ]
  ! DISTINTO        [ reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .) ]
  ! AND             [ reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .) ]
  ! OR              [ reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .) ]
  ! DOSPUNTOS       [ reduce using rule 55 (rango -> BEGIN DOSPUNTOS expresion .) ]


state 172

    (57) rango -> BEGIN DOSPUNTOS END .

    MAS             reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    MENOS           reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    POR             reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    DIVIDIDO        reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    POTENCIA        reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    MODULO          reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    MAYOR           reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    MENOR           reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    MAYIGUAL        reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    MENIGUAL        reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    IGUALDAD        reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    DISTINTO        reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    AND             reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    OR              reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    DOSPUNTOS       reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    PRINT           reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    PRINTLN         reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    ID              reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    MUTABLE         reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    STRUCT          reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    IF              reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    WHILE           reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    FOR             reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    CONTINUE        reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    BREAK           reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    FUNCTION        reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    PARSE           reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    TRUNC           reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    STRINGFUNC      reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    RETURN          reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    CORIZQ          reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    PTCOMA          reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    CORDER          reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    COMA            reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)
    PARDER          reduce using rule 57 (rango -> BEGIN DOSPUNTOS END .)


state 173

    (72) whileInst -> WHILE expresion bloque END .

    PTCOMA          reduce using rule 72 (whileInst -> WHILE expresion bloque END .)


state 174

    (73) forInst -> FOR ID IN expresion . bloque END
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END
    (65) bloque -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . printInst PTCOMA
    (5) instruccion -> . asignacion PTCOMA
    (6) instruccion -> . accesoAsignacion PTCOMA
    (7) instruccion -> . structs PTCOMA
    (8) instruccion -> . ifInst PTCOMA
    (9) instruccion -> . whileInst PTCOMA
    (10) instruccion -> . forInst PTCOMA
    (11) instruccion -> . continueInst PTCOMA
    (12) instruccion -> . breakInst PTCOMA
    (13) instruccion -> . funcionDecl PTCOMA
    (14) instruccion -> . llamadaExp PTCOMA
    (15) instruccion -> . returnInst PTCOMA
    (30) printInst -> . PRINT PARIZQ paramExp PARDER
    (31) printInst -> . PRINTLN PARIZQ paramExp PARDER
    (32) asignacion -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (33) asignacion -> . ID IGUAL expresion
    (34) accesoAsignacion -> . acceso IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (35) accesoAsignacion -> . acceso IGUAL expresion
    (43) structs -> . MUTABLE STRUCT ID atributos END
    (44) structs -> . STRUCT ID atributos END
    (66) ifInst -> . IF expresion bloque END
    (67) ifInst -> . IF expresion bloque ELSE bloque END
    (68) ifInst -> . IF expresion bloque elseIfInst END
    (72) whileInst -> . WHILE expresion bloque END
    (73) forInst -> . FOR ID IN expresion bloque END
    (74) continueInst -> . CONTINUE
    (75) breakInst -> . BREAK
    (23) funcionDecl -> . FUNCTION ID PARIZQ paramsDecl PARDER bloque END
    (24) funcionDecl -> . FUNCTION ID PARIZQ PARDER bloque END
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (29) returnInst -> . RETURN expresion
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107
    MAYOR           shift and go to state 108
    MENOR           shift and go to state 109
    MAYIGUAL        shift and go to state 110
    MENIGUAL        shift and go to state 111
    IGUALDAD        shift and go to state 112
    DISTINTO        shift and go to state 113
    AND             shift and go to state 114
    OR              shift and go to state 115
    DOSPUNTOS       shift and go to state 116
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 18
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    CONTINUE        shift and go to state 25
    BREAK           shift and go to state 26
    FUNCTION        shift and go to state 27
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    RETURN          shift and go to state 31
    CORIZQ          shift and go to state 33

    bloque                         shift and go to state 190
    instrucciones                  shift and go to state 117
    instruccion                    shift and go to state 3
    printInst                      shift and go to state 4
    asignacion                     shift and go to state 5
    accesoAsignacion               shift and go to state 6
    structs                        shift and go to state 7
    ifInst                         shift and go to state 8
    whileInst                      shift and go to state 9
    forInst                        shift and go to state 10
    continueInst                   shift and go to state 11
    breakInst                      shift and go to state 12
    funcionDecl                    shift and go to state 13
    llamadaExp                     shift and go to state 14
    returnInst                     shift and go to state 15
    acceso                         shift and go to state 19
    arreglo                        shift and go to state 32

state 175

    (27) paramDl -> ID . DOSPUNTOS DOSPUNTOS tipo
    (28) paramDl -> ID .

    DOSPUNTOS       shift and go to state 191
    PARDER          reduce using rule 28 (paramDl -> ID .)
    COMA            reduce using rule 28 (paramDl -> ID .)


state 176

    (23) funcionDecl -> FUNCTION ID PARIZQ paramsDecl . PARDER bloque END
    (25) paramsDecl -> paramsDecl . COMA paramDl

    PARDER          shift and go to state 192
    COMA            shift and go to state 193


state 177

    (24) funcionDecl -> FUNCTION ID PARIZQ PARDER . bloque END
    (65) bloque -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . printInst PTCOMA
    (5) instruccion -> . asignacion PTCOMA
    (6) instruccion -> . accesoAsignacion PTCOMA
    (7) instruccion -> . structs PTCOMA
    (8) instruccion -> . ifInst PTCOMA
    (9) instruccion -> . whileInst PTCOMA
    (10) instruccion -> . forInst PTCOMA
    (11) instruccion -> . continueInst PTCOMA
    (12) instruccion -> . breakInst PTCOMA
    (13) instruccion -> . funcionDecl PTCOMA
    (14) instruccion -> . llamadaExp PTCOMA
    (15) instruccion -> . returnInst PTCOMA
    (30) printInst -> . PRINT PARIZQ paramExp PARDER
    (31) printInst -> . PRINTLN PARIZQ paramExp PARDER
    (32) asignacion -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (33) asignacion -> . ID IGUAL expresion
    (34) accesoAsignacion -> . acceso IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (35) accesoAsignacion -> . acceso IGUAL expresion
    (43) structs -> . MUTABLE STRUCT ID atributos END
    (44) structs -> . STRUCT ID atributos END
    (66) ifInst -> . IF expresion bloque END
    (67) ifInst -> . IF expresion bloque ELSE bloque END
    (68) ifInst -> . IF expresion bloque elseIfInst END
    (72) whileInst -> . WHILE expresion bloque END
    (73) forInst -> . FOR ID IN expresion bloque END
    (74) continueInst -> . CONTINUE
    (75) breakInst -> . BREAK
    (23) funcionDecl -> . FUNCTION ID PARIZQ paramsDecl PARDER bloque END
    (24) funcionDecl -> . FUNCTION ID PARIZQ PARDER bloque END
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (29) returnInst -> . RETURN expresion
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 18
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    CONTINUE        shift and go to state 25
    BREAK           shift and go to state 26
    FUNCTION        shift and go to state 27
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    RETURN          shift and go to state 31
    CORIZQ          shift and go to state 33

    bloque                         shift and go to state 194
    instrucciones                  shift and go to state 117
    instruccion                    shift and go to state 3
    printInst                      shift and go to state 4
    asignacion                     shift and go to state 5
    accesoAsignacion               shift and go to state 6
    structs                        shift and go to state 7
    ifInst                         shift and go to state 8
    whileInst                      shift and go to state 9
    forInst                        shift and go to state 10
    continueInst                   shift and go to state 11
    breakInst                      shift and go to state 12
    funcionDecl                    shift and go to state 13
    llamadaExp                     shift and go to state 14
    returnInst                     shift and go to state 15
    acceso                         shift and go to state 19
    arreglo                        shift and go to state 32

state 178

    (26) paramsDecl -> paramDl .

    PARDER          reduce using rule 26 (paramsDecl -> paramDl .)
    COMA            reduce using rule 26 (paramsDecl -> paramDl .)


state 179

    (18) llamadaExp -> PARSE PARIZQ tipo COMA . expresion PARDER
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 195
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 180

    (19) llamadaExp -> TRUNC PARIZQ tipo COMA . expresion PARDER
    (76) expresion -> . expresion MAS expresion
    (77) expresion -> . expresion MENOS expresion
    (78) expresion -> . expresion POR expresion
    (79) expresion -> . expresion DIVIDIDO expresion
    (80) expresion -> . expresion POTENCIA expresion
    (81) expresion -> . expresion MODULO expresion
    (82) expresion -> . expresion MAYOR expresion
    (83) expresion -> . expresion MENOR expresion
    (84) expresion -> . expresion MAYIGUAL expresion
    (85) expresion -> . expresion MENIGUAL expresion
    (86) expresion -> . expresion IGUALDAD expresion
    (87) expresion -> . expresion DISTINTO expresion
    (88) expresion -> . expresion AND expresion
    (89) expresion -> . expresion OR expresion
    (90) expresion -> . MENOS expresion
    (91) expresion -> . NOT expresion
    (92) expresion -> . PARIZQ expresion PARDER
    (93) expresion -> . ENTERO
    (94) expresion -> . DECIMAL
    (95) expresion -> . STRING
    (96) expresion -> . CHAR
    (97) expresion -> . TRUE
    (98) expresion -> . FALSE
    (99) expresion -> . NOTHING
    (100) expresion -> . rango
    (101) expresion -> . acceso
    (102) expresion -> . llamadaExp
    (54) rango -> . expresion DOSPUNTOS expresion
    (55) rango -> . BEGIN DOSPUNTOS expresion
    (56) rango -> . expresion DOSPUNTOS END
    (57) rango -> . BEGIN DOSPUNTOS END
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MENOS           shift and go to state 60
    NOT             shift and go to state 61
    PARIZQ          shift and go to state 62
    ENTERO          shift and go to state 63
    DECIMAL         shift and go to state 64
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    NOTHING         shift and go to state 69
    BEGIN           shift and go to state 73
    ID              shift and go to state 74
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    CORIZQ          shift and go to state 33

    expresion                      shift and go to state 196
    rango                          shift and go to state 70
    acceso                         shift and go to state 71
    llamadaExp                     shift and go to state 72
    arreglo                        shift and go to state 32

state 181

    (20) llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .

    PTCOMA          reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    MAS             reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    MENOS           reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    POR             reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    MODULO          reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    MENOR           reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    MAYIGUAL        reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    MENIGUAL        reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    IGUALDAD        reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    DISTINTO        reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    AND             reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    OR              reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    PRINT           reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    PRINTLN         reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    ID              reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    MUTABLE         reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    STRUCT          reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    IF              reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    WHILE           reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    FOR             reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    CONTINUE        reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    BREAK           reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    FUNCTION        reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    PARSE           reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    TRUNC           reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    STRINGFUNC      reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    RETURN          reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    CORIZQ          reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    CORDER          reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    COMA            reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)
    PARDER          reduce using rule 20 (llamadaExp -> STRINGFUNC PARIZQ expresion PARDER .)


state 182

    (21) paramExp -> paramExp COMA expresion .
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    CORDER          reduce using rule 21 (paramExp -> paramExp COMA expresion .)
    COMA            reduce using rule 21 (paramExp -> paramExp COMA expresion .)
    PARDER          reduce using rule 21 (paramExp -> paramExp COMA expresion .)
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107
    MAYOR           shift and go to state 108
    MENOR           shift and go to state 109
    MAYIGUAL        shift and go to state 110
    MENIGUAL        shift and go to state 111
    IGUALDAD        shift and go to state 112
    DISTINTO        shift and go to state 113
    AND             shift and go to state 114
    OR              shift and go to state 115
    DOSPUNTOS       shift and go to state 116


state 183

    (32) asignacion -> ID IGUAL expresion DOSPUNTOS DOSPUNTOS . tipo
    (36) tipo -> . TINT64
    (37) tipo -> . TFLOAT64
    (38) tipo -> . TSTRING
    (39) tipo -> . TBOOL
    (40) tipo -> . TCHAR
    (41) tipo -> . TNULO
    (42) tipo -> . ID

    TINT64          shift and go to state 126
    TFLOAT64        shift and go to state 127
    TSTRING         shift and go to state 128
    TBOOL           shift and go to state 129
    TCHAR           shift and go to state 130
    TNULO           shift and go to state 131
    ID              shift and go to state 132

    tipo                           shift and go to state 197

state 184

    (34) accesoAsignacion -> acceso IGUAL expresion DOSPUNTOS DOSPUNTOS . tipo
    (36) tipo -> . TINT64
    (37) tipo -> . TFLOAT64
    (38) tipo -> . TSTRING
    (39) tipo -> . TBOOL
    (40) tipo -> . TCHAR
    (41) tipo -> . TNULO
    (42) tipo -> . ID

    TINT64          shift and go to state 126
    TFLOAT64        shift and go to state 127
    TSTRING         shift and go to state 128
    TBOOL           shift and go to state 129
    TCHAR           shift and go to state 130
    TNULO           shift and go to state 131
    ID              shift and go to state 132

    tipo                           shift and go to state 198

state 185

    (43) structs -> MUTABLE STRUCT ID atributos END .

    PTCOMA          reduce using rule 43 (structs -> MUTABLE STRUCT ID atributos END .)


state 186

    (47) atributo -> ID DOSPUNTOS DOSPUNTOS . tipo PTCOMA
    (36) tipo -> . TINT64
    (37) tipo -> . TFLOAT64
    (38) tipo -> . TSTRING
    (39) tipo -> . TBOOL
    (40) tipo -> . TCHAR
    (41) tipo -> . TNULO
    (42) tipo -> . ID

    TINT64          shift and go to state 126
    TFLOAT64        shift and go to state 127
    TSTRING         shift and go to state 128
    TBOOL           shift and go to state 129
    TCHAR           shift and go to state 130
    TNULO           shift and go to state 131
    ID              shift and go to state 132

    tipo                           shift and go to state 199

state 187

    (67) ifInst -> IF expresion bloque ELSE bloque . END

    END             shift and go to state 200


state 188

    (68) ifInst -> IF expresion bloque elseIfInst END .

    PTCOMA          reduce using rule 68 (ifInst -> IF expresion bloque elseIfInst END .)


state 189

    (69) elseIfInst -> ELSEIF expresion . bloque
    (70) elseIfInst -> ELSEIF expresion . bloque ELSE bloque
    (71) elseIfInst -> ELSEIF expresion . bloque elseIfInst
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END
    (65) bloque -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . printInst PTCOMA
    (5) instruccion -> . asignacion PTCOMA
    (6) instruccion -> . accesoAsignacion PTCOMA
    (7) instruccion -> . structs PTCOMA
    (8) instruccion -> . ifInst PTCOMA
    (9) instruccion -> . whileInst PTCOMA
    (10) instruccion -> . forInst PTCOMA
    (11) instruccion -> . continueInst PTCOMA
    (12) instruccion -> . breakInst PTCOMA
    (13) instruccion -> . funcionDecl PTCOMA
    (14) instruccion -> . llamadaExp PTCOMA
    (15) instruccion -> . returnInst PTCOMA
    (30) printInst -> . PRINT PARIZQ paramExp PARDER
    (31) printInst -> . PRINTLN PARIZQ paramExp PARDER
    (32) asignacion -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (33) asignacion -> . ID IGUAL expresion
    (34) accesoAsignacion -> . acceso IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (35) accesoAsignacion -> . acceso IGUAL expresion
    (43) structs -> . MUTABLE STRUCT ID atributos END
    (44) structs -> . STRUCT ID atributos END
    (66) ifInst -> . IF expresion bloque END
    (67) ifInst -> . IF expresion bloque ELSE bloque END
    (68) ifInst -> . IF expresion bloque elseIfInst END
    (72) whileInst -> . WHILE expresion bloque END
    (73) forInst -> . FOR ID IN expresion bloque END
    (74) continueInst -> . CONTINUE
    (75) breakInst -> . BREAK
    (23) funcionDecl -> . FUNCTION ID PARIZQ paramsDecl PARDER bloque END
    (24) funcionDecl -> . FUNCTION ID PARIZQ PARDER bloque END
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (29) returnInst -> . RETURN expresion
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107
    MAYOR           shift and go to state 108
    MENOR           shift and go to state 109
    MAYIGUAL        shift and go to state 110
    MENIGUAL        shift and go to state 111
    IGUALDAD        shift and go to state 112
    DISTINTO        shift and go to state 113
    AND             shift and go to state 114
    OR              shift and go to state 115
    DOSPUNTOS       shift and go to state 116
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 18
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    CONTINUE        shift and go to state 25
    BREAK           shift and go to state 26
    FUNCTION        shift and go to state 27
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    RETURN          shift and go to state 31
    CORIZQ          shift and go to state 33

    bloque                         shift and go to state 201
    instrucciones                  shift and go to state 117
    instruccion                    shift and go to state 3
    printInst                      shift and go to state 4
    asignacion                     shift and go to state 5
    accesoAsignacion               shift and go to state 6
    structs                        shift and go to state 7
    ifInst                         shift and go to state 8
    whileInst                      shift and go to state 9
    forInst                        shift and go to state 10
    continueInst                   shift and go to state 11
    breakInst                      shift and go to state 12
    funcionDecl                    shift and go to state 13
    llamadaExp                     shift and go to state 14
    returnInst                     shift and go to state 15
    acceso                         shift and go to state 19
    arreglo                        shift and go to state 32

state 190

    (73) forInst -> FOR ID IN expresion bloque . END

    END             shift and go to state 202


state 191

    (27) paramDl -> ID DOSPUNTOS . DOSPUNTOS tipo

    DOSPUNTOS       shift and go to state 203


state 192

    (23) funcionDecl -> FUNCTION ID PARIZQ paramsDecl PARDER . bloque END
    (65) bloque -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . printInst PTCOMA
    (5) instruccion -> . asignacion PTCOMA
    (6) instruccion -> . accesoAsignacion PTCOMA
    (7) instruccion -> . structs PTCOMA
    (8) instruccion -> . ifInst PTCOMA
    (9) instruccion -> . whileInst PTCOMA
    (10) instruccion -> . forInst PTCOMA
    (11) instruccion -> . continueInst PTCOMA
    (12) instruccion -> . breakInst PTCOMA
    (13) instruccion -> . funcionDecl PTCOMA
    (14) instruccion -> . llamadaExp PTCOMA
    (15) instruccion -> . returnInst PTCOMA
    (30) printInst -> . PRINT PARIZQ paramExp PARDER
    (31) printInst -> . PRINTLN PARIZQ paramExp PARDER
    (32) asignacion -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (33) asignacion -> . ID IGUAL expresion
    (34) accesoAsignacion -> . acceso IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (35) accesoAsignacion -> . acceso IGUAL expresion
    (43) structs -> . MUTABLE STRUCT ID atributos END
    (44) structs -> . STRUCT ID atributos END
    (66) ifInst -> . IF expresion bloque END
    (67) ifInst -> . IF expresion bloque ELSE bloque END
    (68) ifInst -> . IF expresion bloque elseIfInst END
    (72) whileInst -> . WHILE expresion bloque END
    (73) forInst -> . FOR ID IN expresion bloque END
    (74) continueInst -> . CONTINUE
    (75) breakInst -> . BREAK
    (23) funcionDecl -> . FUNCTION ID PARIZQ paramsDecl PARDER bloque END
    (24) funcionDecl -> . FUNCTION ID PARIZQ PARDER bloque END
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (29) returnInst -> . RETURN expresion
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 18
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    CONTINUE        shift and go to state 25
    BREAK           shift and go to state 26
    FUNCTION        shift and go to state 27
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    RETURN          shift and go to state 31
    CORIZQ          shift and go to state 33

    bloque                         shift and go to state 204
    instrucciones                  shift and go to state 117
    instruccion                    shift and go to state 3
    printInst                      shift and go to state 4
    asignacion                     shift and go to state 5
    accesoAsignacion               shift and go to state 6
    structs                        shift and go to state 7
    ifInst                         shift and go to state 8
    whileInst                      shift and go to state 9
    forInst                        shift and go to state 10
    continueInst                   shift and go to state 11
    breakInst                      shift and go to state 12
    funcionDecl                    shift and go to state 13
    llamadaExp                     shift and go to state 14
    returnInst                     shift and go to state 15
    acceso                         shift and go to state 19
    arreglo                        shift and go to state 32

state 193

    (25) paramsDecl -> paramsDecl COMA . paramDl
    (27) paramDl -> . ID DOSPUNTOS DOSPUNTOS tipo
    (28) paramDl -> . ID

    ID              shift and go to state 175

    paramDl                        shift and go to state 205

state 194

    (24) funcionDecl -> FUNCTION ID PARIZQ PARDER bloque . END

    END             shift and go to state 206


state 195

    (18) llamadaExp -> PARSE PARIZQ tipo COMA expresion . PARDER
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    PARDER          shift and go to state 207
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107
    MAYOR           shift and go to state 108
    MENOR           shift and go to state 109
    MAYIGUAL        shift and go to state 110
    MENIGUAL        shift and go to state 111
    IGUALDAD        shift and go to state 112
    DISTINTO        shift and go to state 113
    AND             shift and go to state 114
    OR              shift and go to state 115
    DOSPUNTOS       shift and go to state 116


state 196

    (19) llamadaExp -> TRUNC PARIZQ tipo COMA expresion . PARDER
    (76) expresion -> expresion . MAS expresion
    (77) expresion -> expresion . MENOS expresion
    (78) expresion -> expresion . POR expresion
    (79) expresion -> expresion . DIVIDIDO expresion
    (80) expresion -> expresion . POTENCIA expresion
    (81) expresion -> expresion . MODULO expresion
    (82) expresion -> expresion . MAYOR expresion
    (83) expresion -> expresion . MENOR expresion
    (84) expresion -> expresion . MAYIGUAL expresion
    (85) expresion -> expresion . MENIGUAL expresion
    (86) expresion -> expresion . IGUALDAD expresion
    (87) expresion -> expresion . DISTINTO expresion
    (88) expresion -> expresion . AND expresion
    (89) expresion -> expresion . OR expresion
    (54) rango -> expresion . DOSPUNTOS expresion
    (56) rango -> expresion . DOSPUNTOS END

    PARDER          shift and go to state 208
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    POR             shift and go to state 104
    DIVIDIDO        shift and go to state 105
    POTENCIA        shift and go to state 106
    MODULO          shift and go to state 107
    MAYOR           shift and go to state 108
    MENOR           shift and go to state 109
    MAYIGUAL        shift and go to state 110
    MENIGUAL        shift and go to state 111
    IGUALDAD        shift and go to state 112
    DISTINTO        shift and go to state 113
    AND             shift and go to state 114
    OR              shift and go to state 115
    DOSPUNTOS       shift and go to state 116


state 197

    (32) asignacion -> ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipo .

    PTCOMA          reduce using rule 32 (asignacion -> ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipo .)


state 198

    (34) accesoAsignacion -> acceso IGUAL expresion DOSPUNTOS DOSPUNTOS tipo .

    PTCOMA          reduce using rule 34 (accesoAsignacion -> acceso IGUAL expresion DOSPUNTOS DOSPUNTOS tipo .)


state 199

    (47) atributo -> ID DOSPUNTOS DOSPUNTOS tipo . PTCOMA

    PTCOMA          shift and go to state 209


state 200

    (67) ifInst -> IF expresion bloque ELSE bloque END .

    PTCOMA          reduce using rule 67 (ifInst -> IF expresion bloque ELSE bloque END .)


state 201

    (69) elseIfInst -> ELSEIF expresion bloque .
    (70) elseIfInst -> ELSEIF expresion bloque . ELSE bloque
    (71) elseIfInst -> ELSEIF expresion bloque . elseIfInst
    (69) elseIfInst -> . ELSEIF expresion bloque
    (70) elseIfInst -> . ELSEIF expresion bloque ELSE bloque
    (71) elseIfInst -> . ELSEIF expresion bloque elseIfInst

    END             reduce using rule 69 (elseIfInst -> ELSEIF expresion bloque .)
    ELSE            shift and go to state 210
    ELSEIF          shift and go to state 153

    elseIfInst                     shift and go to state 211

state 202

    (73) forInst -> FOR ID IN expresion bloque END .

    PTCOMA          reduce using rule 73 (forInst -> FOR ID IN expresion bloque END .)


state 203

    (27) paramDl -> ID DOSPUNTOS DOSPUNTOS . tipo
    (36) tipo -> . TINT64
    (37) tipo -> . TFLOAT64
    (38) tipo -> . TSTRING
    (39) tipo -> . TBOOL
    (40) tipo -> . TCHAR
    (41) tipo -> . TNULO
    (42) tipo -> . ID

    TINT64          shift and go to state 126
    TFLOAT64        shift and go to state 127
    TSTRING         shift and go to state 128
    TBOOL           shift and go to state 129
    TCHAR           shift and go to state 130
    TNULO           shift and go to state 131
    ID              shift and go to state 132

    tipo                           shift and go to state 212

state 204

    (23) funcionDecl -> FUNCTION ID PARIZQ paramsDecl PARDER bloque . END

    END             shift and go to state 213


state 205

    (25) paramsDecl -> paramsDecl COMA paramDl .

    PARDER          reduce using rule 25 (paramsDecl -> paramsDecl COMA paramDl .)
    COMA            reduce using rule 25 (paramsDecl -> paramsDecl COMA paramDl .)


state 206

    (24) funcionDecl -> FUNCTION ID PARIZQ PARDER bloque END .

    PTCOMA          reduce using rule 24 (funcionDecl -> FUNCTION ID PARIZQ PARDER bloque END .)


state 207

    (18) llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .

    PTCOMA          reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    MAS             reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    MENOS           reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    POR             reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    POTENCIA        reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    MODULO          reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    MAYOR           reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    MENOR           reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    MAYIGUAL        reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    MENIGUAL        reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    IGUALDAD        reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    DISTINTO        reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    AND             reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    OR              reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    DOSPUNTOS       reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    PRINT           reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    PRINTLN         reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    ID              reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    MUTABLE         reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    STRUCT          reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    IF              reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    WHILE           reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    FOR             reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    CONTINUE        reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    BREAK           reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    FUNCTION        reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    PARSE           reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    TRUNC           reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    STRINGFUNC      reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    RETURN          reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    CORIZQ          reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    CORDER          reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    COMA            reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)
    PARDER          reduce using rule 18 (llamadaExp -> PARSE PARIZQ tipo COMA expresion PARDER .)


state 208

    (19) llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .

    PTCOMA          reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    MAS             reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    MENOS           reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    POR             reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    DIVIDIDO        reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    POTENCIA        reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    MODULO          reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    MAYOR           reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    MENOR           reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    MAYIGUAL        reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    MENIGUAL        reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    IGUALDAD        reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    DISTINTO        reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    AND             reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    OR              reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    DOSPUNTOS       reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    PRINT           reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    PRINTLN         reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    ID              reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    MUTABLE         reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    STRUCT          reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    IF              reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    WHILE           reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    FOR             reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    CONTINUE        reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    BREAK           reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    FUNCTION        reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    PARSE           reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    TRUNC           reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    STRINGFUNC      reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    RETURN          reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    CORIZQ          reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    CORDER          reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    COMA            reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)
    PARDER          reduce using rule 19 (llamadaExp -> TRUNC PARIZQ tipo COMA expresion PARDER .)


state 209

    (47) atributo -> ID DOSPUNTOS DOSPUNTOS tipo PTCOMA .

    END             reduce using rule 47 (atributo -> ID DOSPUNTOS DOSPUNTOS tipo PTCOMA .)
    ID              reduce using rule 47 (atributo -> ID DOSPUNTOS DOSPUNTOS tipo PTCOMA .)


state 210

    (70) elseIfInst -> ELSEIF expresion bloque ELSE . bloque
    (65) bloque -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . printInst PTCOMA
    (5) instruccion -> . asignacion PTCOMA
    (6) instruccion -> . accesoAsignacion PTCOMA
    (7) instruccion -> . structs PTCOMA
    (8) instruccion -> . ifInst PTCOMA
    (9) instruccion -> . whileInst PTCOMA
    (10) instruccion -> . forInst PTCOMA
    (11) instruccion -> . continueInst PTCOMA
    (12) instruccion -> . breakInst PTCOMA
    (13) instruccion -> . funcionDecl PTCOMA
    (14) instruccion -> . llamadaExp PTCOMA
    (15) instruccion -> . returnInst PTCOMA
    (30) printInst -> . PRINT PARIZQ paramExp PARDER
    (31) printInst -> . PRINTLN PARIZQ paramExp PARDER
    (32) asignacion -> . ID IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (33) asignacion -> . ID IGUAL expresion
    (34) accesoAsignacion -> . acceso IGUAL expresion DOSPUNTOS DOSPUNTOS tipo
    (35) accesoAsignacion -> . acceso IGUAL expresion
    (43) structs -> . MUTABLE STRUCT ID atributos END
    (44) structs -> . STRUCT ID atributos END
    (66) ifInst -> . IF expresion bloque END
    (67) ifInst -> . IF expresion bloque ELSE bloque END
    (68) ifInst -> . IF expresion bloque elseIfInst END
    (72) whileInst -> . WHILE expresion bloque END
    (73) forInst -> . FOR ID IN expresion bloque END
    (74) continueInst -> . CONTINUE
    (75) breakInst -> . BREAK
    (23) funcionDecl -> . FUNCTION ID PARIZQ paramsDecl PARDER bloque END
    (24) funcionDecl -> . FUNCTION ID PARIZQ PARDER bloque END
    (16) llamadaExp -> . ID PARIZQ paramExp PARDER
    (17) llamadaExp -> . ID PARIZQ PARDER
    (18) llamadaExp -> . PARSE PARIZQ tipo COMA expresion PARDER
    (19) llamadaExp -> . TRUNC PARIZQ tipo COMA expresion PARDER
    (20) llamadaExp -> . STRINGFUNC PARIZQ expresion PARDER
    (29) returnInst -> . RETURN expresion
    (58) acceso -> . acceso PUNTO acceso
    (59) acceso -> . ID PUNTO ID
    (60) acceso -> . arreglo PUNTO arreglo
    (61) acceso -> . arreglo PUNTO ID
    (62) acceso -> . ID PUNTO arreglo
    (63) acceso -> . ID
    (64) acceso -> . arreglo
    (49) arreglo -> . CORIZQ paramExp CORDER
    (50) arreglo -> . ID listaIndices

    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 18
    MUTABLE         shift and go to state 20
    STRUCT          shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    CONTINUE        shift and go to state 25
    BREAK           shift and go to state 26
    FUNCTION        shift and go to state 27
    PARSE           shift and go to state 28
    TRUNC           shift and go to state 29
    STRINGFUNC      shift and go to state 30
    RETURN          shift and go to state 31
    CORIZQ          shift and go to state 33

    bloque                         shift and go to state 214
    instrucciones                  shift and go to state 117
    instruccion                    shift and go to state 3
    printInst                      shift and go to state 4
    asignacion                     shift and go to state 5
    accesoAsignacion               shift and go to state 6
    structs                        shift and go to state 7
    ifInst                         shift and go to state 8
    whileInst                      shift and go to state 9
    forInst                        shift and go to state 10
    continueInst                   shift and go to state 11
    breakInst                      shift and go to state 12
    funcionDecl                    shift and go to state 13
    llamadaExp                     shift and go to state 14
    returnInst                     shift and go to state 15
    acceso                         shift and go to state 19
    arreglo                        shift and go to state 32

state 211

    (71) elseIfInst -> ELSEIF expresion bloque elseIfInst .

    END             reduce using rule 71 (elseIfInst -> ELSEIF expresion bloque elseIfInst .)


state 212

    (27) paramDl -> ID DOSPUNTOS DOSPUNTOS tipo .

    PARDER          reduce using rule 27 (paramDl -> ID DOSPUNTOS DOSPUNTOS tipo .)
    COMA            reduce using rule 27 (paramDl -> ID DOSPUNTOS DOSPUNTOS tipo .)


state 213

    (23) funcionDecl -> FUNCTION ID PARIZQ paramsDecl PARDER bloque END .

    PTCOMA          reduce using rule 23 (funcionDecl -> FUNCTION ID PARIZQ paramsDecl PARDER bloque END .)


state 214

    (70) elseIfInst -> ELSEIF expresion bloque ELSE bloque .

    END             reduce using rule 70 (elseIfInst -> ELSEIF expresion bloque ELSE bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL in state 18 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 18 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 32 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 52 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 74 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 74 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 90 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 95 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 96 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 96 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 136 resolved as shift
WARNING: shift/reduce conflict for MAS in state 168 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 168 resolved as shift
WARNING: shift/reduce conflict for POR in state 168 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 168 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 168 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 168 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 168 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 168 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 168 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 168 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 168 resolved as shift
WARNING: shift/reduce conflict for DISTINTO in state 168 resolved as shift
WARNING: shift/reduce conflict for AND in state 168 resolved as shift
WARNING: shift/reduce conflict for OR in state 168 resolved as shift
WARNING: shift/reduce conflict for DOSPUNTOS in state 168 resolved as shift
WARNING: shift/reduce conflict for MAS in state 171 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 171 resolved as shift
WARNING: shift/reduce conflict for POR in state 171 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 171 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 171 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 171 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 171 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 171 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 171 resolved as shift
WARNING: shift/reduce conflict for DISTINTO in state 171 resolved as shift
WARNING: shift/reduce conflict for AND in state 171 resolved as shift
WARNING: shift/reduce conflict for OR in state 171 resolved as shift
WARNING: shift/reduce conflict for DOSPUNTOS in state 171 resolved as shift
